import React, { Component } from 'react';
import injectEventListeners from 'alliance-react/injectEventListeners';
import RootEventListener from 'alliance-react/RootEventListener';
import BodyStyle from 'alliance-react/BodyStyle';
import hoverState from 'alliance-react/hoverState';

@hoverState()
class Test extends Component {

    state = { className: 'test' };

    onClick = () => {
        this.setState({ className: `class${this.count++}` });
    };

    onKeyDown = () => {
        console.log('onkeydown');
    };

    stopPropagation = e => e.stopPropagation();

    count = 0;

    render() {
        return (
            <RootEventListener onClick={this.onClick} onKeyDown={this.onKeyDown}>
                <p>
                    test!
                    <div>
                    {this.props.isHovered ? <span>Hovered!</span> : <span>Not hovered!</span>}
                    </div>
                    <BodyStyle className={this.state.className}>
                        <input type="text" name="test" onKeyDown={this.stopPropagation} />
                    </BodyStyle>
                </p>
            </RootEventListener>
        );
    }
}

@injectEventListeners()
@hoverState()
class App extends Component {

    render() {
        const { eventListeners } = this.props;
        return (
            <BodyStyle className="app">
                <div style={{ height: '100%' }} tabIndex="0" {...eventListeners}>
                    {this.props.isHovered ? <span>Hovered!</span> : <span>Not hovered!</span>}
                    <input type="text" name="Asdf" />
                    <Test />
                </div>
            </BodyStyle>
        );
    }
}
export default App;
