// @flow
import type { PermissionDescriptor } from '../permissions/PermissionChecker';
import useCheckPermissions from './useCheckPermissions';

/**
 * Check a permission. If you need to check multiple permissions use [useCheckPermissions](/api/hooks/#useCheckPermissions).
 *
 * Note that you can check multiple permissions here but the check is that the user has _all_
 * of the permissions. If you want the results individually use useCheckPermissions.
 *
 * Returns an array of 2 elements [hasPerm, isLoading]
 *
 * @example
 *
 * ```js
 * function UpdateButton({ record }) {
 *     const [hasPerm, isLoading] = useCheckPermission({ record, action: 'update' });
 *
 *     if (!hasPerm) {
 *         return null;
 *     }
 *
 *     return <ActionLink record={record} action="update>Update</ActionLink>;
 * }
 * ```
 *
 * ```js
 * const [isAdmin] = useCheckPermission('is_admin');
 * ```
 *
 * ```js
 * const [isAdminAndSuperuser] = useCheckPermission(['is_admin', 'is_superuser']);
 * ```
 *
 * @return A 2 element array. The first element is boolean indicating whether
 * user has permission, the second element a boolean indicating whether permission
 * check is still resolving
 */
export default function useCheckPermission(permOrObj: PermissionDescriptor): [boolean, boolean] {
    const {
        isLoading,
        perms: { hasPerm },
    } = useCheckPermissions({
        hasPerm: permOrObj,
    });

    return [hasPerm, isLoading];
}
