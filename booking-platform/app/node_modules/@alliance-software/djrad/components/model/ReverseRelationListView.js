import * as React from 'react';
import { Button, List, Popconfirm } from 'antd';
import DelimitedList from '../DelimitedList';

import ReverseRelationView from './ReverseRelationView';

import './ReverseRelationListView.less';

const ItemActions = ({ isDeleting, item, onEdit, onDelete }) => (
    <DelimitedList separator=" ">
        <Button disabled={isDeleting} onClick={() => onEdit(item)}>
            Edit
        </Button>
        <Popconfirm
            title="Are you sure you want to delete this record?"
            onConfirm={() => onDelete(item)}
            okText="Yes"
            cancelText="No"
        >
            <Button icon="close" loading={isDeleting} shape="circle" size="small" type="danger" />
        </Popconfirm>
    </DelimitedList>
);

function Item(props) {
    const { itemActionsComponent: Actions, itemBodyComponent: Body, ...rest } = props;
    return <List.Item actions={[<Actions {...rest} />]}>{<Body {...rest} />}</List.Item>;
}

function Header({ label, onAdd }) {
    return (
        <div className="djrad--reverse-relation-list-view__header">
            <h3>{label}</h3>
            <Button icon="plus" type="primary" ghost onClick={onAdd}>
                Add
            </Button>
        </div>
    );
}

export default function ReverseRelationListView(props) {
    const {
        headerComponent,
        itemComponent,
        itemBodyComponent,
        itemActionsComponent,
        label,
        ...rest
    } = props;
    const HeaderComponent = headerComponent;
    const ItemComponent = itemComponent;
    return (
        <ReverseRelationView
            {...rest}
            renderList={({ dataSource, onAdd, onEdit, onDelete, isDeleting }) => (
                <List
                    dataSource={dataSource.toArray()}
                    header={<HeaderComponent label={label} onAdd={onAdd} />}
                    renderItem={item => (
                        <ItemComponent
                            itemBodyComponent={itemBodyComponent}
                            itemActionsComponent={itemActionsComponent}
                            item={item}
                            onDelete={onDelete}
                            onEdit={onEdit}
                            isDeleting={isDeleting}
                        />
                    )}
                />
            )}
        />
    );
}

ReverseRelationListView.defaultProps = {
    headerComponent: Header,
    itemComponent: Item,
    itemActionsComponent: ItemActions,
    itemBodyComponent: props => props.item.__str__,
};
