// @flow
import React, { useContext } from 'react';
import FormContext from '../form/formContext';
import FieldWidget from './FieldWidget';
import ModelFormContext from './modelFormContext';

/**
 * Selects the default widget to use based on the field type. You rarely need to use this directly; use
 * [ModelFormItem](/components/ModelFormItem/) or [ModelFormField](/components/ModelFormField/) instead.
 */
export default function ModelFormFieldWidget(props: {
    name: string | {},
    djradFieldName: ?string,
}) {
    // djradFieldName is used to resolve conflicts if  using redux-form Fields with a field that has
    // the name 'name'
    const { name, djradFieldName = name, ...rest } = props;
    const { getFieldDefinition } = useContext(ModelFormContext);
    const { getFormPath } = useContext(FormContext);
    const field = getFieldDefinition(djradFieldName);

    return <FieldWidget name={name} id={getFormPath(djradFieldName)} field={field} {...rest} />;
}
