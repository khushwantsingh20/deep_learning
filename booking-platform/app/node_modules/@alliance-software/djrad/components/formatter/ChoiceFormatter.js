// @flow
import * as React from 'react';
import type { FormatterProps } from './types';

type Props = FormatterProps & {
    labels: { [value: string]: string } | Map<any, string>,
};

export default class ChoiceFormatter extends React.Component<Props> {
    render() {
        const { value, record, labels, fieldName } = this.props;
        if (value == null || value === '') {
            return null;
        }
        const choiceValue = labels instanceof Map ? labels.get(value) : labels[value];
        if (choiceValue == null) {
            // eslint-disable-next-line
            console.warn(
                `Expected to find value choice label for field ${fieldName} with value ${value} on model ${
                    record._meta.modelId
                } but no such choice option exists.`,
                labels
            );
            return value;
        }
        return choiceValue;
    }
}
