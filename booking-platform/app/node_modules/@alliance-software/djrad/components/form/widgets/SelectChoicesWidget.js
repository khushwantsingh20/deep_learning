// @flow
import React from 'react';
import { Select } from 'antd';
import type { WidgetProps } from '../FormField';

// $FlowFixMe intersection of tuples seems to be problematic
type Choice = [string, string];
type Group = [string, Array<string>];

type Props = WidgetProps & {
    choices: Array<Choice> | Array<Group>,
    multiple?: boolean,
};

function renderOptions(choices: Array<Choice> | Array<Group>, allowGroups = true) {
    return choices.map(([key, value]) => {
        if (Array.isArray(value)) {
            if (!allowGroups) {
                throw new Error('You cannot nest select option groups');
            }
            return (
                <Select.OptGroup key={key} label={key}>
                    {renderOptions(value, false)}
                </Select.OptGroup>
            );
        }
        return (
            <Select.Option key={key} value={key.toString()}>
                {value}
            </Select.Option>
        );
    });
}

/**
 * Render a list of choices as select box. If you need to use non-string keys (number or boolean values)
 * use [ChoicesWidget](/components/ChoicesWidget/) instead, eg.
 *
 * ```
 * <ChoicesWidget
 *   {...widgetProps}
 *   type="select"
 *   choices={[
 *     [true, 'Yes'],
 *     [false, 'No'],
 *   ]}
 * />
 * ```
 */
export default function SelectChoicesWidget({ choices, multiple, ...rest }: Props) {
    return (
        <Select mode={multiple ? 'multiple' : 'default'} {...rest}>
            {renderOptions(choices)}
        </Select>
    );
}
