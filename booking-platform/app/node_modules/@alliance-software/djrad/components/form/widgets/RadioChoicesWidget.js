// @flow
import * as React from 'react';
import { Radio } from 'antd';
import type { WidgetProps } from '../FormField';

type Props = WidgetProps & {
    choices: Array<[string, string]>,
    radioComponent?: React.ComponentType<{ value: string, children: React.Node }>,
};

/**
 * Render a list of choices as radio buttons. If you need to use non-string keys (number or boolean values)
 * use [ChoicesWidget](/components/ChoicesWidget/) instead, eg.
 *
 * ```
 * <ChoicesWidget
 *   {...widgetProps}
 *   type="radio"
 *   choices={[
 *     [true, 'Yes'],
 *     [false, 'No'],
 *   ]}
 * />
 * ```
 */
export default function RadioChoicesWidget({ choices, radioComponent, value, ...rest }: Props) {
    const RadioComponent = radioComponent || Radio;
    return (
        <Radio.Group value={value == null ? value : value.toString()} {...rest}>
            {choices.map(([key, label]) => (
                <RadioComponent key={key} value={key.toString()}>
                    {label}
                </RadioComponent>
            ))}
        </Radio.Group>
    );
}
