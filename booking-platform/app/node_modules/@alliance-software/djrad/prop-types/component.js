/* eslint consistent-return: 0 */
// TODO: This is duplicated from model.js
// Splitting this out into util.js and importing it didn't work! Some weird
// build error seemingly related to the fact the directory is named 'prop-types'.
// If I rename it to proptypes it works...
import { isValidElementType } from 'react-is';

function createChainableTypeChecker(validate) {
    function checkType(isRequired, props, propName, componentName, location) {
        if (props[propName] == null) {
            if (isRequired) {
                return new Error(
                    `Required prop '${propName}' was not specified in ${componentName}`
                );
            }
            return null;
        }
        return validate(props, propName, componentName, location);
    }

    const chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
}

/**
 * Check if a prop is a valid React comopnent
 */
export default createChainableTypeChecker((props, propName, componentName) => {
    if (props[propName] && !isValidElementType(props[propName])) {
        return new Error(
            `Invalid prop '${propName}' supplied to '${componentName}': the prop is not a valid React component`
        );
    }
});
