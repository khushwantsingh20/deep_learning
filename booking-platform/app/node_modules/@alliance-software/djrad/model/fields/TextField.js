// @flow
import * as React from 'react';
import Field from './Field';
import type { WidgetProps } from '../../components/form/FormField';
import ChoicesWidget from '../../components/form/widgets/ChoicesWidget';
import TextAreaWidget from '../../components/form/widgets/TextAreaWidget';
import RemoteChoicesWidget from '../../components/form/widgets/RemoteChoicesWidget';

export default class TextField extends Field {
    getDefaultWidget(props: WidgetProps) {
        if (this.choiceRefinementUrl) {
            return (
                <RemoteChoicesWidget
                    allowClear={!this.required}
                    endpoint={this.choiceRefinementUrl}
                    {...props}
                />
            );
        }
        if (this.choices) {
            const choices: Array<[string, string]> = [...this.choices.entries()];
            return <ChoicesWidget required={this.required} {...props} choices={choices} />;
        }
        return <TextAreaWidget autoSize={{ minRows: 3, maxRows: 20 }} {...props} />;
    }
}
