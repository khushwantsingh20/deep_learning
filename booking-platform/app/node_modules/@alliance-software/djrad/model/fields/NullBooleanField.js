// @flow
import React from 'react';
import SelectChoicesWidget from '../../components/form/widgets/SelectChoicesWidget';
import Field from './Field';
import BooleanFormatter from '../../components/formatter/BooleanFormatter';
import type { FormatterProps } from '../../components/formatter/types';
import type { WidgetProps } from '../../components/form/FormField';

export default class NullBooleanField extends Field {
    parse(value: any): ?boolean {
        if (value === 'yes') {
            return true;
        }
        if (value === 'no') {
            return false;
        }
        return null;
    }

    format(value: boolean): ?string {
        if (value === true) {
            return 'yes';
        }
        if (value === false) {
            return 'no';
        }
        return null;
    }

    getDefaultFormatter(props: FormatterProps) {
        return <BooleanFormatter {...props} />;
    }

    getDefaultWidget(props: WidgetProps) {
        return (
            <SelectChoicesWidget choices={[['yes', 'Yes'], ['no', 'No']]} allowClear {...props} />
        );
    }
}
