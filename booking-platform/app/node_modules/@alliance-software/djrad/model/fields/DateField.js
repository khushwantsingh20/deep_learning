// @flow
import React from 'react';
import moment from 'moment';
import Field from './Field';
import DateFormatter from '../../components/formatter/DateFormatter';
import DateWidget from '../../components/form/widgets/DateWidget';
import type { FormatterProps } from '../../components/formatter/types';
import type { WidgetProps } from '../../components/form/FormField';

export default class DateField extends Field {
    parse(value: any) {
        return moment.isMoment(value) ? value.format('YYYY-MM-DD') : value;
    }

    format(value: any) {
        if (!value) {
            return null;
        }
        return moment(value);
    }

    getDefaultFormatter(props: FormatterProps) {
        return <DateFormatter {...props} />;
    }

    getDefaultWidget(props: WidgetProps) {
        return <DateWidget {...props} />;
    }

    getDefaultValue() {
        const defaultValue = super.getDefaultValue();
        if (typeof defaultValue === 'string') {
            return moment(defaultValue);
        }
        return defaultValue;
    }
}
