/** @flow */
import React from 'react';
import moment from 'moment';
import DateTimeFormatter from '../../components/formatter/DateTimeFormatter';

import RangeField from './RangeField';
import DateRangeWidget from '../../components/form/widgets/DateRangeWidget';
import type { WidgetProps } from '../../components/form/FormField';
import type { FormatterProps } from '../../components/formatter/types';

export default class DateTimeRangeField extends RangeField {
    parse(value: any, name: string) {
        if (name === this.name) {
            const { lower, upper } = value;
            return {
                upper: moment.isMoment(upper) ? upper.format() : upper,
                lower: moment.isMoment(lower) ? lower.format() : lower,
            };
        }
        return moment.isMoment(value) ? value.format() : value;
    }

    format(value: any, name: string) {
        if (!value) {
            return null;
        }
        // Dealing with the object ie. { lower: '...', upper: '...' }
        if (name === this.name) {
            return {
                lower: value.lower ? moment(value.lower) : null,
                upper: value.upper ? moment(value.upper) : null,
            };
        }
        // Otherwise dealing with the individual field (lower or upper)
        return moment(value);
    }

    getRangeValueFormatter(props: FormatterProps) {
        return <DateTimeFormatter {...props} />;
    }

    getDefaultWidget(props: WidgetProps) {
        return <DateRangeWidget showTime {...props} />;
    }
}
