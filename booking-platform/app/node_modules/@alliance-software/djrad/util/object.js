import reduce from 'lodash/reduce';
import isPlainObject from 'lodash/isPlainObject';
import size from 'lodash/size';

export function getObjectFieldPaths(obj, arrayNotation = false) {
    function _getObjectFieldPaths(_obj, currentPath) {
        if ((Array.isArray(_obj) || isPlainObject(_obj)) && size(_obj) > 0) {
            return reduce(
                _obj,
                (acc, value, key) => {
                    let ret;
                    if (Array.isArray(_obj) && arrayNotation) {
                        ret = _getObjectFieldPaths(value, [
                            ...currentPath.slice(0, -1),
                            currentPath[currentPath.length - 1] + `[${key}]`,
                        ]);
                    } else {
                        ret = _getObjectFieldPaths(value, [...currentPath, key]);
                    }
                    if (Array.isArray(ret)) {
                        acc.push(...ret);
                    } else {
                        acc.push(ret);
                    }
                    return acc;
                },
                []
            );
        }
        return currentPath.join('.');
    }
    return _getObjectFieldPaths(obj, []);
}
