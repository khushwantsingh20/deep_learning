import { List } from 'immutable';
import { appendToUrl } from '@alliance-software/djrad/util/url';
import React, { useMemo } from 'react';
import { Route } from 'react-router';
import useRouter from './hooks/useRouter';
import ModelInspector from './ModelInspector';

export default function ModelsPanel({ match, models }) {
    const { history } = useRouter();
    const options = useMemo(() => {
        const sortedModels = List([...models.values()]).sortBy(model => model._meta.modelId);
        return sortedModels
            .map(model => ({
                label: `${model._meta.label} (${model._meta.modelId})`,
                value: model._meta.modelId,
            }))
            .toArray();
    }, [models]);
    return (
        <>
            <Route
                path={appendToUrl(match.url) + ':modelId?'}
                render={routeProps => (
                    <>
                        <select
                            onChange={({ target: { value } }) =>
                                history.push(appendToUrl(match.url, value))
                            }
                            value={routeProps.match.params.modelId || ''}
                            style={{ minWidth: 300, margin: '10px 0' }}
                            autoFocus
                        >
                            <option />
                            {options.map(({ label, value }) => (
                                <option key={value} value={value}>
                                    {label}
                                </option>
                            ))}
                        </select>
                        {routeProps.match.params.modelId &&
                            models.get(routeProps.match.params.modelId) && (
                                <>
                                    <hr />
                                    <ModelInspector
                                        {...routeProps}
                                        model={models.get(routeProps.match.params.modelId)}
                                    />
                                </>
                            )}
                    </>
                )}
            />
        </>
    );
}
