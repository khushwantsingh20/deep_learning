import UrlDrivenTabs from '@alliance-software/djrad/components/UrlDrivenTabs';
import Button from 'antd/lib/button';
import { createMemoryHistory } from 'history';
import React, { useRef, useEffect } from 'react';
import { Router } from 'react-router';

import DjradDevToolsContext from './context';

import ApiCallsPanel from './ApiCallsPanel';
import DevToolsData from './DevToolsData';
import ModelsPanel from './ModelsPanel';

const wrapperStyle = {
    position: 'fixed',
    right: 10,
    top: 10,
    backgroundColor: 'white',
    zIndex: 50,
    width: '70%',
    padding: 20,
    borderRadius: 3,
    boxShadow: '0 4px 12px #ccc',
    maxHeight: 'calc(100vh - 20px)',
    overflow: 'auto',
};

const HISTORY_KEY = '__djraddevtools_history';

const closeStyle = {
    position: 'absolute',
    top: 10,
    right: 20,
    zIndex: 50,
};

export default function DevToolsInner({ site, shadowRoot, onClose }) {
    const data = new DevToolsData(site);
    const historyRef = useRef(null);
    if (historyRef.current === null) {
        const initialEntry = window.localStorage.getItem(HISTORY_KEY);
        const history = createMemoryHistory({
            initialEntries: initialEntry ? [initialEntry] : ['/models/'],
        });
        historyRef.current = history;
    }
    useEffect(() => {
        return historyRef.current.listen(location => {
            window.localStorage.setItem(HISTORY_KEY, location.pathname);
        });
    }, []);
    return (
        <DjradDevToolsContext.Provider value={{ shadowRoot, devToolsData: data }}>
            <Router history={historyRef.current}>
                <div style={wrapperStyle}>
                    <Button onClick={onClose} shape="round" size="small" style={closeStyle}>
                        Close
                    </Button>
                    <link href="https://unpkg.com/antd@3.18.2/dist/antd.min.css" rel="stylesheet" />
                    <link
                        href="https://unpkg.com/react-select-search@0.9.6/style.css"
                        rel="stylesheet"
                    />
                    <UrlDrivenTabs defaultActiveKey="models" animated={false}>
                        <UrlDrivenTabs.TabPane
                            tab="Models"
                            url="models"
                            renderPane={({ match, isActive }) =>
                                isActive && <ModelsPanel match={match} models={site.models} />
                            }
                        />
                        <UrlDrivenTabs.TabPane
                            tab="API"
                            url="api"
                            renderPane={({ match, isActive }) =>
                                isActive && <ApiCallsPanel match={match} />
                            }
                        />
                    </UrlDrivenTabs>
                </div>
            </Router>
        </DjradDevToolsContext.Provider>
    );
}
