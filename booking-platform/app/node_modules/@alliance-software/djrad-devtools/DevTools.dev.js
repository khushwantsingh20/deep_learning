import useSite from '@alliance-software/djrad/hooks/useSite';
import React, { Suspense, useState, useEffect } from 'react';
import retargetEvents from 'react-shadow-dom-retarget-events';
import { createPortal } from 'react-dom';

const ROOT_ID = '__djrad-inspector-root';
const MOUNT_ID = '__djrad-inspector-mount';

const DevToolsInner = React.lazy(() => import('./DevToolsInner'));

const getRootNode = () => {
    let root = document.getElementById(ROOT_ID);
    if (root) {
        return root;
    }
    root = document.createElement('div');
    root.setAttribute('id', ROOT_ID);
    document.body.appendChild(root);
    const shadowRoot = root.attachShadow({ mode: 'open' });
    const mountPoint = document.createElement('div');
    mountPoint.setAttribute('id', MOUNT_ID);
    shadowRoot.appendChild(mountPoint);
    retargetEvents(shadowRoot);

    return root;
};

export default function DevTools() {
    const [isVisible, setIsVisible] = useState(false);
    useEffect(() => {
        const toggleVisible = e => {
            if (e.ctrlKey && e.key === 'D' && e.shiftKey) {
                setIsVisible(visible => !visible);
            }
        };
        document.addEventListener('keydown', toggleVisible);
        return () => document.removeEventListener('keydown', toggleVisible);
    });
    useEffect(() => {
        // eslint-disable-next-line no-console
        console.info('%c djrad devtools enabled. Toggle with CTRL-SHIFT-D', 'font-size: 1.2em');
    }, []);
    const site = useSite();
    const rootNode = getRootNode();
    const shadowRoot = rootNode.shadowRoot;
    const el = isVisible && (
        <Suspense fallback={null}>
            <DevToolsInner
                site={site}
                shadowRoot={shadowRoot}
                onClose={() => setIsVisible(false)}
            />
        </Suspense>
    );

    return createPortal(el, shadowRoot.getElementById(MOUNT_ID));
}
