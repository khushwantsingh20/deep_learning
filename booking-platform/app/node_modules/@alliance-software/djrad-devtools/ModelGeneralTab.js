import Table from 'antd/lib/table';
import React from 'react';
import js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';
import { Light as SyntaxHighlighter } from 'react-syntax-highlighter';
import light from 'react-syntax-highlighter/dist/esm/styles/hljs/atom-one-light';
import HttpMethod from './HttpMethod';
import RowView from './RowView';
import SourceLink from './SourceLink';

SyntaxHighlighter.registerLanguage('js', js);

const { Row, Value, Label } = RowView;

function ModelGeneralTab({ devtoolsData, model }) {
    const meta = model._meta;
    const { apiRootUrl } = devtoolsData;
    const actions = [
        ...model._meta.actions.object.map(action => ({
            name: action,
            permissions: model._meta.getActionPermissions(action).join(', '),
            global: false,
            urlPattern: model.getObjectActionPattern(action),
            linkLabel: model.getActionLabel(action),
        })),
        ...model._meta.actions.global.map(action => ({
            name: action,
            permissions: model._meta.getActionPermissions(action).join(', '),
            global: true,
            urlPattern: model.getGlobalActionPattern(action),
            linkLabel: model.getActionLabel(action),
        })),
    ];
    return (
        <RowView>
            <Row>
                <Label>Label</Label>
                <Value>{meta.label}</Value>
            </Row>
            <Row>
                <Label>Label Plural</Label>
                <Value>{meta.labelPlural}</Value>
            </Row>
            <Row>
                <Label>Viewset</Label>
                <Value>
                    <SourceLink source={devtoolsData.viewset}>
                        {devtoolsData.viewset.name}
                    </SourceLink>
                </Value>
            </Row>
            <Row>
                <Label>Serializer</Label>
                <Value>
                    <SourceLink source={devtoolsData.serializer}>
                        {devtoolsData.serializer.name}
                    </SourceLink>
                </Value>
            </Row>
            <Row>
                <Label>API Urls</Label>
                <Value>
                    {devtoolsData.urls.map(({ url, pattern, name, method, methodName, source }) => (
                        <div
                            key={`${name}${method}`}
                            style={{ display: 'flex', alignItems: 'center', paddingBottom: 10 }}
                        >
                            <HttpMethod method={method} />
                            <SourceLink
                                fixedWidth={200}
                                source={source}
                                style={{ marginRight: 10, textAlign: 'left' }}
                            >
                                {methodName}
                            </SourceLink>
                            {url && <a href={url}>/{decodeURI(url.replace(apiRootUrl, ''))}</a>}
                            {!url && pattern}
                        </div>
                    ))}
                </Value>
            </Row>
            <Row>
                <Label>Actions</Label>
                <Value>
                    <Table
                        dataSource={actions}
                        pagination={false}
                        rowKey="name"
                        columns={[
                            {
                                title: 'Name',
                                dataIndex: 'name',
                                render(value) {
                                    return value;
                                },
                            },
                            {
                                title: 'Type',
                                dataIndex: 'global',
                                render(value) {
                                    return value ? 'Global' : 'Object';
                                },
                            },
                            {
                                title: 'Permissions',
                                dataIndex: 'permissions',
                                render(value) {
                                    return value;
                                },
                            },
                            {
                                title: 'URL Pattern',
                                dataIndex: 'urlPattern',
                                render(value) {
                                    return value;
                                },
                            },
                            {
                                title: 'Default Label',
                                dataIndex: 'linkLabel',
                                render(value) {
                                    return value;
                                },
                            },
                        ]}
                    />
                    <p style={{ marginTop: 20 }}> To create a route for an action call:</p>
                    <SyntaxHighlighter language="js" style={light}>
                        {`const url = ${model.name}.getActionPattern(action);
<Route
    path={url}
    render={routeProps => (
        <MyActionView {...routeProps} record={record} />
    )}
/>`}
                    </SyntaxHighlighter>
                    <p>To link to a record:</p>
                    <SyntaxHighlighter language="js" style={light}>
                        {`// You can omit children to use default label
<ActionLink action="detail" record={record}>View</ActionLink>`}
                    </SyntaxHighlighter>
                    <p>To link to a global action:</p>
                    <SyntaxHighlighter language="js" style={light}>
                        {`// You can omit children to use default label
<ActionLink action="list" model={${model.name}}>List ${model._meta.labelPlural}</ActionLink>`}
                    </SyntaxHighlighter>
                    <p>
                        See the{' '}
                        <a href="https://djrad.herokuapp.com/docs/quickstart/permissions/">
                            Permissions Documentation
                        </a>{' '}
                        for more details.
                    </p>
                </Value>
            </Row>
        </RowView>
    );
}

export default ModelGeneralTab;
