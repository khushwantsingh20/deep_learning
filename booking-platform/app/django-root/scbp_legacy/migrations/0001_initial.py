# Generated by Django 2.2.6 on 2019-10-22 03:15

from django.db import migrations
from django.db import models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CommonBodypartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "contentitemrecord_id",
                    models.IntegerField(
                        blank=True, db_column="ContentItemRecord_id", null=True
                    ),
                ),
                ("text", models.TextField(blank=True, db_column="Text", null=True)),
                (
                    "format",
                    models.CharField(
                        blank=True, db_column="Format", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "Common_BodyPartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="CommonCommonpartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "ownerid",
                    models.IntegerField(blank=True, db_column="OwnerId", null=True),
                ),
                (
                    "createdutc",
                    models.DateTimeField(blank=True, db_column="CreatedUtc", null=True),
                ),
                (
                    "publishedutc",
                    models.DateTimeField(
                        blank=True, db_column="PublishedUtc", null=True
                    ),
                ),
                (
                    "modifiedutc",
                    models.DateTimeField(
                        blank=True, db_column="ModifiedUtc", null=True
                    ),
                ),
                (
                    "container_id",
                    models.IntegerField(
                        blank=True, db_column="Container_id", null=True
                    ),
                ),
            ],
            options={"db_table": "Common_CommonPartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="CommonCommonpartversionrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "contentitemrecord_id",
                    models.IntegerField(
                        blank=True, db_column="ContentItemRecord_id", null=True
                    ),
                ),
                (
                    "createdutc",
                    models.DateTimeField(blank=True, db_column="CreatedUtc", null=True),
                ),
                (
                    "publishedutc",
                    models.DateTimeField(
                        blank=True, db_column="PublishedUtc", null=True
                    ),
                ),
                (
                    "modifiedutc",
                    models.DateTimeField(
                        blank=True, db_column="ModifiedUtc", null=True
                    ),
                ),
            ],
            options={"db_table": "Common_CommonPartVersionRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="CommonIdentitypartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "identifier",
                    models.CharField(
                        blank=True, db_column="Identifier", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "Common_IdentityPartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="ContainersContainablepartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "position",
                    models.IntegerField(blank=True, db_column="Position", null=True),
                ),
            ],
            options={"db_table": "Containers_ContainablePartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="ContainersContainerpartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "paginated",
                    models.BooleanField(blank=True, db_column="Paginated", null=True),
                ),
                (
                    "pagesize",
                    models.IntegerField(blank=True, db_column="PageSize", null=True),
                ),
                (
                    "itemcontenttypes",
                    models.CharField(
                        blank=True,
                        db_column="ItemContentTypes",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("itemsshown", models.BooleanField(db_column="ItemsShown")),
                ("showonadminmenu", models.BooleanField(db_column="ShowOnAdminMenu")),
                (
                    "adminmenutext",
                    models.CharField(
                        blank=True, db_column="AdminMenuText", max_length=50, null=True
                    ),
                ),
                (
                    "adminmenuposition",
                    models.CharField(
                        blank=True,
                        db_column="AdminMenuPosition",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "adminmenuimageset",
                    models.CharField(
                        blank=True,
                        db_column="AdminMenuImageSet",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "enablepositioning",
                    models.BooleanField(
                        blank=True, db_column="EnablePositioning", null=True
                    ),
                ),
                (
                    "adminlistviewname",
                    models.CharField(
                        blank=True,
                        db_column="AdminListViewName",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("itemcount", models.IntegerField(db_column="ItemCount")),
            ],
            options={"db_table": "Containers_ContainerPartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="ContainersContainerwidgetpartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "containerid",
                    models.IntegerField(blank=True, db_column="ContainerId", null=True),
                ),
                (
                    "pagesize",
                    models.IntegerField(blank=True, db_column="PageSize", null=True),
                ),
                (
                    "orderbyproperty",
                    models.CharField(
                        blank=True,
                        db_column="OrderByProperty",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "orderbydirection",
                    models.IntegerField(
                        blank=True, db_column="OrderByDirection", null=True
                    ),
                ),
                (
                    "applyfilter",
                    models.BooleanField(blank=True, db_column="ApplyFilter", null=True),
                ),
                (
                    "filterbyproperty",
                    models.CharField(
                        blank=True,
                        db_column="FilterByProperty",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "filterbyoperator",
                    models.CharField(
                        blank=True,
                        db_column="FilterByOperator",
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "filterbyvalue",
                    models.CharField(
                        blank=True, db_column="FilterByValue", max_length=128, null=True
                    ),
                ),
            ],
            options={
                "db_table": "Containers_ContainerWidgetPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LegacyAccountTypes",
            fields=[
                (
                    "type",
                    models.CharField(
                        db_column="Type",
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                )
            ],
            options={"db_table": "tblAccountTypes", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyAdhocInvoices",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("jobnumber", models.IntegerField(db_column="JobNumber")),
                (
                    "date_required",
                    models.CharField(db_column="DateRequired", max_length=8),
                ),
                (
                    "time_required",
                    models.CharField(db_column="TimeRequired", max_length=4),
                ),
                (
                    "total_trip_charge",
                    models.DecimalField(
                        db_column="TotalTripCharge", decimal_places=4, max_digits=10
                    ),
                ),
                (
                    "dest_suburb",
                    models.CharField(db_column="DestSuburb", max_length=25),
                ),
                ("dest_postcode", models.IntegerField(db_column="DestPostcode")),
                (
                    "dest_address",
                    models.CharField(db_column="DestAddress", max_length=50),
                ),
                ("dest_no", models.IntegerField(db_column="DestNo")),
                ("pu_name", models.CharField(db_column="PUName", max_length=100)),
                ("pu_suburb", models.CharField(db_column="PUSuburb", max_length=25)),
                ("pu_postcode", models.IntegerField(db_column="PUPostcode")),
                ("pu_address", models.CharField(db_column="PUAddress", max_length=50)),
                ("pu_no", models.IntegerField(db_column="PUNo")),
                (
                    "credit_card_surcharge",
                    models.DecimalField(
                        blank=True,
                        db_column="CreditCardSurcharge",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
            ],
            options={"db_table": "tblAdhocInvoices", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyAssignCPartyCar",
            fields=[
                (
                    "carno",
                    models.CharField(
                        db_column="CarNo",
                        max_length=6,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("cpid", models.IntegerField(db_column="CPID")),
            ],
            options={"db_table": "tblAssignCPartyCar", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyBookingDetailsReport",
            fields=[
                (
                    "job_number",
                    models.IntegerField(
                        db_column="JobNumber", primary_key=True, serialize=False
                    ),
                ),
                (
                    "date_required",
                    models.CharField(db_column="DateRequired", max_length=8),
                ),
                (
                    "time_required",
                    models.CharField(db_column="TimeRequired", max_length=4),
                ),
                ("car_type", models.CharField(db_column="CarType", max_length=10)),
                (
                    "payment_method",
                    models.CharField(db_column="PaymentMethod", max_length=20),
                ),
                (
                    "customer_price",
                    models.DecimalField(
                        db_column="CustomerPrice", decimal_places=4, max_digits=10
                    ),
                ),
                ("instructions", models.TextField(db_column="Instructions")),
            ],
            options={"db_table": "tblBookingDetailsReport", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyBookingRequirements",
            fields=[
                (
                    "bookingreqid",
                    models.IntegerField(
                        db_column="BookingReqID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "requirement",
                    models.CharField(
                        blank=True, db_column="Requirement", max_length=30, null=True
                    ),
                ),
                (
                    "requirementno",
                    models.IntegerField(
                        blank=True, db_column="RequirementNo", null=True
                    ),
                ),
            ],
            options={"db_table": "tblBookingRequirements", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyBookings",
            fields=[
                (
                    "jobnumber",
                    models.AutoField(
                        db_column="JobNumber", primary_key=True, serialize=False
                    ),
                ),
                ("sxdatebooked", models.DateTimeField(db_column="SXDateBooked")),
                (
                    "daterequired",
                    models.CharField(db_column="DateRequired", max_length=8),
                ),
                (
                    "timerequired",
                    models.CharField(db_column="TimeRequired", max_length=4),
                ),
                (
                    "cartype",
                    models.CharField(
                        blank=True, db_column="CarType", max_length=10, null=True
                    ),
                ),
                (
                    "acctno",
                    models.CharField(
                        blank=True, db_column="Acctno", max_length=10, null=True
                    ),
                ),
                (
                    "contactname",
                    models.CharField(
                        blank=True, db_column="ContactName", max_length=25, null=True
                    ),
                ),
                (
                    "contactphone",
                    models.CharField(
                        blank=True, db_column="ContactPhone", max_length=40, null=True
                    ),
                ),
                (
                    "pricingmethod",
                    models.CharField(
                        blank=True, db_column="PricingMethod", max_length=20, null=True
                    ),
                ),
                (
                    "instructions",
                    models.TextField(blank=True, db_column="Instructions", null=True),
                ),
                (
                    "bookingtype",
                    models.CharField(db_column="BookingType", max_length=1),
                ),
                (
                    "carno",
                    models.CharField(
                        blank=True, db_column="CarNo", max_length=6, null=True
                    ),
                ),
                ("driverno", models.IntegerField(db_column="DriverNo")),
                (
                    "status",
                    models.CharField(
                        blank=True, db_column="Status", max_length=20, null=True
                    ),
                ),
                (
                    "sxoperator",
                    models.CharField(
                        blank=True, db_column="SXOperator", max_length=20, null=True
                    ),
                ),
                ("carposn", models.IntegerField(db_column="CarPosn")),
                ("carcount", models.IntegerField(db_column="CarCount")),
                (
                    "tripcharge",
                    models.DecimalField(
                        db_column="TripCharge", decimal_places=4, max_digits=10
                    ),
                ),
                (
                    "authwaitingcharge",
                    models.DecimalField(
                        db_column="AuthWaitingCharge", decimal_places=4, max_digits=10
                    ),
                ),
                (
                    "extras",
                    models.DecimalField(
                        db_column="Extras", decimal_places=4, max_digits=10
                    ),
                ),
                (
                    "totaltripcharge",
                    models.DecimalField(
                        db_column="TotalTripCharge", decimal_places=4, max_digits=10
                    ),
                ),
                (
                    "cardriverequip",
                    models.DecimalField(
                        db_column="CarDriverEquip", decimal_places=4, max_digits=10
                    ),
                ),
                (
                    "driverjobvalue",
                    models.DecimalField(
                        db_column="DriverJobValue", decimal_places=4, max_digits=10
                    ),
                ),
                (
                    "pickuptime",
                    models.CharField(
                        blank=True, db_column="PickupTime", max_length=4, null=True
                    ),
                ),
                (
                    "droptime",
                    models.CharField(
                        blank=True, db_column="DropTime", max_length=4, null=True
                    ),
                ),
                (
                    "totaltime",
                    models.CharField(
                        blank=True, db_column="TotalTime", max_length=4, null=True
                    ),
                ),
                (
                    "kilometers",
                    models.CharField(
                        blank=True, db_column="Kilometers", max_length=4, null=True
                    ),
                ),
                (
                    "referenceno",
                    models.CharField(
                        blank=True, db_column="ReferenceNo", max_length=15, null=True
                    ),
                ),
                (
                    "paymentmethod",
                    models.CharField(db_column="PaymentMethod", max_length=20),
                ),
                (
                    "deleted",
                    models.CharField(
                        blank=True, db_column="Deleted", max_length=1, null=True
                    ),
                ),
                (
                    "variation",
                    models.CharField(
                        blank=True, db_column="Variation", max_length=255, null=True
                    ),
                ),
                (
                    "despatchdisplayorder",
                    models.CharField(db_column="DespatchDisplayOrder", max_length=1),
                ),
                (
                    "rateschedule",
                    models.CharField(
                        blank=True, db_column="RateSchedule", max_length=30, null=True
                    ),
                ),
                (
                    "noofpax",
                    models.IntegerField(blank=True, db_column="NoOfPax", null=True),
                ),
                (
                    "runno",
                    models.IntegerField(blank=True, db_column="RunNo", null=True),
                ),
                (
                    "bookingreq01",
                    models.CharField(
                        blank=True, db_column="BookingReq01", max_length=30, null=True
                    ),
                ),
                (
                    "bookingreq02",
                    models.CharField(
                        blank=True, db_column="BookingReq02", max_length=30, null=True
                    ),
                ),
                (
                    "bookingreq03",
                    models.CharField(
                        blank=True, db_column="BookingReq03", max_length=30, null=True
                    ),
                ),
                (
                    "bookingreq04",
                    models.CharField(
                        blank=True, db_column="BookingReq04", max_length=30, null=True
                    ),
                ),
                (
                    "bookingreq05",
                    models.CharField(
                        blank=True, db_column="BookingReq05", max_length=30, null=True
                    ),
                ),
                (
                    "bookingreqisvalet",
                    models.BooleanField(
                        blank=True, db_column="BookingReqISValet", null=True
                    ),
                ),
                (
                    "collected",
                    models.DecimalField(
                        blank=True,
                        db_column="Collected",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "contractedpartyid",
                    models.IntegerField(
                        blank=True, db_column="ContractedPartyID", null=True
                    ),
                ),
                (
                    "bookingcode",
                    models.CharField(
                        blank=True, db_column="BookingCode", max_length=50, null=True
                    ),
                ),
                (
                    "noofchildren",
                    models.SmallIntegerField(
                        blank=True, db_column="NoOfChildren", null=True
                    ),
                ),
                (
                    "nocheckinitems",
                    models.SmallIntegerField(
                        blank=True, db_column="NoCheckInItems", null=True
                    ),
                ),
                (
                    "isairport",
                    models.BooleanField(blank=True, db_column="IsAirport", null=True),
                ),
                (
                    "afterhourssurcharge",
                    models.DecimalField(
                        blank=True,
                        db_column="AfterHoursSurcharge",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "equipmentfee",
                    models.DecimalField(
                        blank=True,
                        db_column="EquipmentFee",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "bookingfee",
                    models.DecimalField(
                        blank=True,
                        db_column="BookingFee",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "variationfee",
                    models.DecimalField(
                        blank=True,
                        db_column="VariationFee",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "creditcardsurcharge",
                    models.DecimalField(
                        blank=True,
                        db_column="CreditCardSurcharge",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "totalcharge",
                    models.DecimalField(
                        blank=True,
                        db_column="TotalCharge",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "supplierrebate",
                    models.DecimalField(
                        blank=True,
                        db_column="SupplierRebate",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "otherinstructions",
                    models.CharField(
                        blank=True,
                        db_column="OtherInstructions",
                        max_length=250,
                        null=True,
                    ),
                ),
                (
                    "driverpayment",
                    models.CharField(
                        blank=True, db_column="DriverPayment", max_length=10, null=True
                    ),
                ),
                (
                    "contactid",
                    models.IntegerField(blank=True, db_column="ContactId", null=True),
                ),
                (
                    "supplierref",
                    models.CharField(
                        blank=True, db_column="SupplierRef", max_length=50, null=True
                    ),
                ),
                (
                    "bookingmethod",
                    models.CharField(
                        blank=True, db_column="BookingMethod", max_length=10, null=True
                    ),
                ),
                (
                    "driverdisplayno",
                    models.IntegerField(
                        blank=True, db_column="DriverDisplayNo", null=True
                    ),
                ),
                (
                    "calcdaterequired",
                    models.CharField(
                        blank=True,
                        db_column="CalcDateRequired",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "calctimerequired",
                    models.CharField(
                        blank=True,
                        db_column="CalcTimeRequired",
                        max_length=16,
                        null=True,
                    ),
                ),
                (
                    "calcdeleted",
                    models.BooleanField(blank=True, db_column="CalcDeleted", null=True),
                ),
                (
                    "portalusercreated",
                    models.CharField(
                        blank=True,
                        db_column="PortalUserCreated",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "portaluserlastupdated",
                    models.CharField(
                        blank=True,
                        db_column="PortalUserLastUpdated",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "pickupflightdelay",
                    models.IntegerField(
                        blank=True, db_column="PickupFlightDelay", null=True
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        blank=True,
                        db_column="Discount",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "calcdatebooked",
                    models.CharField(
                        blank=True, db_column="CalcDateBooked", max_length=10, null=True
                    ),
                ),
            ],
            options={"db_table": "tblBookings", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyBookingsV",
            fields=[
                (
                    "jobnumber",
                    models.IntegerField(
                        db_column="JobNumber", primary_key=True, serialize=False
                    ),
                ),
                ("clientno", models.IntegerField(db_column="ClientNo")),
                (
                    "versionstamp",
                    models.CharField(db_column="VersionStamp", max_length=14),
                ),
                ("sxdatebooked", models.DateTimeField(db_column="SXDateBooked")),
                (
                    "daterequired",
                    models.CharField(db_column="DateRequired", max_length=8),
                ),
                (
                    "timerequired",
                    models.CharField(db_column="TimeRequired", max_length=4),
                ),
                (
                    "cartype",
                    models.CharField(
                        blank=True, db_column="CarType", max_length=10, null=True
                    ),
                ),
                (
                    "acctno",
                    models.CharField(
                        blank=True, db_column="Acctno", max_length=10, null=True
                    ),
                ),
                (
                    "contactname",
                    models.CharField(
                        blank=True, db_column="ContactName", max_length=25, null=True
                    ),
                ),
                (
                    "contactphone",
                    models.CharField(
                        blank=True, db_column="ContactPhone", max_length=40, null=True
                    ),
                ),
                (
                    "pricingmethod",
                    models.CharField(
                        blank=True, db_column="PricingMethod", max_length=20, null=True
                    ),
                ),
                (
                    "instructions",
                    models.TextField(blank=True, db_column="Instructions", null=True),
                ),
                (
                    "bookingtype",
                    models.CharField(db_column="BookingType", max_length=1),
                ),
                (
                    "carno",
                    models.CharField(
                        blank=True, db_column="CarNo", max_length=6, null=True
                    ),
                ),
                ("driverno", models.IntegerField(db_column="DriverNo")),
                (
                    "status",
                    models.CharField(
                        blank=True, db_column="Status", max_length=20, null=True
                    ),
                ),
                (
                    "sxoperator",
                    models.CharField(
                        blank=True, db_column="SXOperator", max_length=20, null=True
                    ),
                ),
                ("carposn", models.IntegerField(db_column="CarPosn")),
                ("carcount", models.IntegerField(db_column="CarCount")),
                (
                    "tripcharge",
                    models.DecimalField(
                        db_column="TripCharge", decimal_places=4, max_digits=10
                    ),
                ),
                (
                    "authwaitingcharge",
                    models.DecimalField(
                        db_column="AuthWaitingCharge", decimal_places=4, max_digits=10
                    ),
                ),
                (
                    "extras",
                    models.DecimalField(
                        db_column="Extras", decimal_places=4, max_digits=10
                    ),
                ),
                (
                    "totaltripcharge",
                    models.DecimalField(
                        db_column="TotalTripCharge", decimal_places=4, max_digits=10
                    ),
                ),
                (
                    "cardriverequip",
                    models.DecimalField(
                        db_column="CarDriverEquip", decimal_places=4, max_digits=10
                    ),
                ),
                (
                    "driverjobvalue",
                    models.DecimalField(
                        db_column="DriverJobValue", decimal_places=4, max_digits=10
                    ),
                ),
                (
                    "pickuptime",
                    models.CharField(
                        blank=True, db_column="PickupTime", max_length=4, null=True
                    ),
                ),
                (
                    "droptime",
                    models.CharField(
                        blank=True, db_column="DropTime", max_length=4, null=True
                    ),
                ),
                (
                    "totaltime",
                    models.CharField(
                        blank=True, db_column="TotalTime", max_length=4, null=True
                    ),
                ),
                (
                    "kilometers",
                    models.CharField(
                        blank=True, db_column="Kilometers", max_length=4, null=True
                    ),
                ),
                (
                    "referenceno",
                    models.CharField(
                        blank=True, db_column="ReferenceNo", max_length=15, null=True
                    ),
                ),
                (
                    "paymentmethod",
                    models.CharField(db_column="PaymentMethod", max_length=20),
                ),
                (
                    "deleted",
                    models.CharField(
                        blank=True, db_column="Deleted", max_length=1, null=True
                    ),
                ),
                (
                    "variation",
                    models.CharField(
                        blank=True, db_column="Variation", max_length=255, null=True
                    ),
                ),
                (
                    "despatchdisplayorder",
                    models.CharField(db_column="DespatchDisplayOrder", max_length=1),
                ),
                (
                    "rateschedule",
                    models.CharField(
                        blank=True, db_column="RateSchedule", max_length=30, null=True
                    ),
                ),
                (
                    "noofpax",
                    models.IntegerField(blank=True, db_column="NoOfPax", null=True),
                ),
                (
                    "runno",
                    models.IntegerField(blank=True, db_column="RunNo", null=True),
                ),
                (
                    "bookingreq01",
                    models.CharField(
                        blank=True, db_column="BookingReq01", max_length=30, null=True
                    ),
                ),
                (
                    "bookingreq02",
                    models.CharField(
                        blank=True, db_column="BookingReq02", max_length=30, null=True
                    ),
                ),
                (
                    "bookingreq03",
                    models.CharField(
                        blank=True, db_column="BookingReq03", max_length=30, null=True
                    ),
                ),
                (
                    "bookingreq04",
                    models.CharField(
                        blank=True, db_column="BookingReq04", max_length=30, null=True
                    ),
                ),
                (
                    "bookingreq05",
                    models.CharField(
                        blank=True, db_column="BookingReq05", max_length=30, null=True
                    ),
                ),
                (
                    "bookingreqisvalet",
                    models.BooleanField(
                        blank=True, db_column="BookingReqISValet", null=True
                    ),
                ),
                (
                    "collected",
                    models.DecimalField(
                        blank=True,
                        db_column="Collected",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "contractedpartyid",
                    models.IntegerField(
                        blank=True, db_column="ContractedPartyID", null=True
                    ),
                ),
                (
                    "bookingcode",
                    models.CharField(
                        blank=True, db_column="BookingCode", max_length=50, null=True
                    ),
                ),
                (
                    "noofchildren",
                    models.SmallIntegerField(
                        blank=True, db_column="NoOfChildren", null=True
                    ),
                ),
                (
                    "nocheckinitems",
                    models.SmallIntegerField(
                        blank=True, db_column="NoCheckInItems", null=True
                    ),
                ),
                (
                    "isairport",
                    models.BooleanField(blank=True, db_column="IsAirport", null=True),
                ),
                (
                    "afterhourssurcharge",
                    models.DecimalField(
                        blank=True,
                        db_column="AfterHoursSurcharge",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "equipmentfee",
                    models.DecimalField(
                        blank=True,
                        db_column="EquipmentFee",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "bookingfee",
                    models.DecimalField(
                        blank=True,
                        db_column="BookingFee",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "variationfee",
                    models.DecimalField(
                        blank=True,
                        db_column="VariationFee",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "creditcardsurcharge",
                    models.DecimalField(
                        blank=True,
                        db_column="CreditCardSurcharge",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "totalcharge",
                    models.DecimalField(
                        blank=True,
                        db_column="TotalCharge",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "supplierrebate",
                    models.DecimalField(
                        blank=True,
                        db_column="SupplierRebate",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "otherinstructions",
                    models.CharField(
                        blank=True,
                        db_column="OtherInstructions",
                        max_length=250,
                        null=True,
                    ),
                ),
                (
                    "driverpayment",
                    models.CharField(
                        blank=True, db_column="DriverPayment", max_length=10, null=True
                    ),
                ),
                (
                    "contactid",
                    models.IntegerField(blank=True, db_column="ContactId", null=True),
                ),
                (
                    "supplierref",
                    models.CharField(
                        blank=True, db_column="SupplierRef", max_length=50, null=True
                    ),
                ),
                (
                    "bookingmethod",
                    models.CharField(
                        blank=True, db_column="BookingMethod", max_length=50, null=True
                    ),
                ),
            ],
            options={"db_table": "tblBookingsV", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyBookingType",
            fields=[
                (
                    "bookingtypeid",
                    models.CharField(
                        db_column="BookingTypeID",
                        max_length=1,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "bookingtype",
                    models.CharField(
                        blank=True, db_column="BookingType", max_length=30, null=True
                    ),
                ),
                (
                    "isvalet",
                    models.BooleanField(blank=True, db_column="IsValet", null=True),
                ),
                (
                    "orderid",
                    models.IntegerField(blank=True, db_column="OrderID", null=True),
                ),
                ("isactive", models.BooleanField(db_column="IsActive")),
                ("isdefault", models.BooleanField(db_column="IsDefault")),
            ],
            options={"db_table": "tblBookingType", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyCapacity",
            fields=[
                (
                    "empcapacity",
                    models.CharField(db_column="EmpCapacity", max_length=30),
                ),
                (
                    "capacitycode",
                    models.CharField(
                        db_column="CapacityCode",
                        max_length=1,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
            options={"db_table": "tblCapacity", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyCar",
            fields=[
                (
                    "carno",
                    models.CharField(
                        db_column="CarNo",
                        max_length=6,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("mh", models.CharField(db_column="MH", max_length=6)),
                ("make", models.CharField(db_column="Make", max_length=25)),
                ("model", models.CharField(db_column="Model", max_length=25)),
                ("colour", models.CharField(db_column="Colour", max_length=12)),
                (
                    "yearofmake",
                    models.CharField(
                        blank=True, db_column="YearOfMake", max_length=7, null=True
                    ),
                ),
                (
                    "driverno",
                    models.IntegerField(blank=True, db_column="DriverNo", null=True),
                ),
                (
                    "active",
                    models.IntegerField(blank=True, db_column="Active", null=True),
                ),
                (
                    "bhppass",
                    models.CharField(
                        blank=True, db_column="BHPPass", max_length=1, null=True
                    ),
                ),
                (
                    "odometer",
                    models.CharField(
                        blank=True, db_column="Odometer", max_length=30, null=True
                    ),
                ),
                (
                    "inspectiondate",
                    models.DateTimeField(
                        blank=True, db_column="InspectionDate", null=True
                    ),
                ),
                (
                    "radioserialno",
                    models.CharField(
                        blank=True, db_column="RadioSerialNo", max_length=10, null=True
                    ),
                ),
            ],
            options={"db_table": "tblCar", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyCarColour",
            fields=[
                (
                    "carcolourid",
                    models.AutoField(
                        db_column="CarColourId", primary_key=True, serialize=False
                    ),
                ),
                (
                    "displayname",
                    models.CharField(db_column="DisplayName", max_length=25),
                ),
                (
                    "abbreviation",
                    models.CharField(db_column="Abbreviation", max_length=6),
                ),
                ("orderid", models.IntegerField(db_column="OrderID")),
                ("isactive", models.BooleanField(db_column="IsActive")),
            ],
            options={"db_table": "tblCarColour", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyCarMake",
            fields=[
                (
                    "makeid",
                    models.AutoField(
                        db_column="MakeId", primary_key=True, serialize=False
                    ),
                ),
                (
                    "displayname",
                    models.CharField(db_column="DisplayName", max_length=25),
                ),
                (
                    "abbreviation",
                    models.CharField(db_column="Abbreviation", max_length=3),
                ),
                ("orderid", models.IntegerField(db_column="OrderID")),
                ("isactive", models.BooleanField(db_column="IsActive")),
            ],
            options={"db_table": "tblCarMake", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyCartypes",
            fields=[
                (
                    "type",
                    models.CharField(
                        db_column="Type",
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "abbreviation",
                    models.CharField(
                        blank=True, db_column="Abbreviation", max_length=3, null=True
                    ),
                ),
                (
                    "orderid",
                    models.IntegerField(blank=True, db_column="OrderID", null=True),
                ),
                ("isactive", models.BooleanField(db_column="IsActive")),
                (
                    "displayname",
                    models.CharField(db_column="DisplayName", max_length=25),
                ),
                (
                    "highcapacity",
                    models.BooleanField(
                        blank=True, db_column="HighCapacity", null=True
                    ),
                ),
            ],
            options={"db_table": "tblCarTypes", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyCategory",
            fields=[
                (
                    "categoryname",
                    models.CharField(
                        db_column="CategoryName",
                        max_length=40,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "categorycode",
                    models.CharField(db_column="CategoryCode", max_length=1),
                ),
                ("special", models.CharField(db_column="Special", max_length=4)),
                (
                    "orderid",
                    models.IntegerField(blank=True, db_column="OrderID", null=True),
                ),
            ],
            options={"db_table": "tblCategory", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyChargetype",
            fields=[
                (
                    "chargetype",
                    models.CharField(
                        db_column="ChargeType",
                        max_length=1,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("chargedesc", models.CharField(db_column="ChargeDesc", max_length=20)),
            ],
            options={"db_table": "tblChargeType", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyClassification",
            fields=[
                (
                    "classificationid",
                    models.IntegerField(
                        db_column="ClassificationID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "classification",
                    models.CharField(
                        blank=True, db_column="Classification", max_length=30, null=True
                    ),
                ),
            ],
            options={"db_table": "tblClassification", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyClient",
            fields=[
                (
                    "clientno",
                    models.AutoField(
                        db_column="ClientNo", primary_key=True, serialize=False
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, db_column="Title", max_length=5, null=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=250, null=True
                    ),
                ),
                ("accountno", models.CharField(db_column="AccountNo", max_length=10)),
                (
                    "refno",
                    models.CharField(
                        blank=True, db_column="RefNo", max_length=10, null=True
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, db_column="Category", max_length=1, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True, db_column="Status", max_length=10, null=True
                    ),
                ),
                ("phone", models.CharField(db_column="Phone", max_length=15)),
                (
                    "addrtype",
                    models.CharField(
                        blank=True, db_column="AddrType", max_length=10, null=True
                    ),
                ),
                (
                    "addrsubno",
                    models.CharField(
                        blank=True, db_column="AddrSubNo", max_length=10, null=True
                    ),
                ),
                ("addrnumber", models.CharField(db_column="AddrNumber", max_length=10)),
                ("addrstreet", models.CharField(db_column="AddrStreet", max_length=30)),
                (
                    "addrstreettype",
                    models.CharField(db_column="AddrStreetType", max_length=10),
                ),
                ("addrsuburb", models.CharField(db_column="AddrSuburb", max_length=25)),
                ("addrstate", models.CharField(db_column="AddrState", max_length=10)),
                ("addrpostcode", models.IntegerField(db_column="AddrPostCode")),
                (
                    "paymentmethod",
                    models.CharField(
                        blank=True, db_column="PaymentMethod", max_length=20, null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, db_column="Description", max_length=50, null=True
                    ),
                ),
                (
                    "surname",
                    models.CharField(
                        blank=True, db_column="Surname", max_length=50, null=True
                    ),
                ),
                (
                    "firstnames",
                    models.CharField(
                        blank=True, db_column="FirstNames", max_length=50, null=True
                    ),
                ),
                (
                    "priority",
                    models.SmallIntegerField(
                        blank=True, db_column="Priority", null=True
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, db_column="Country", max_length=50, null=True
                    ),
                ),
                (
                    "datecreated",
                    models.DateTimeField(
                        blank=True, db_column="DateCreated", null=True
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True, db_column="Department", max_length=50, null=True
                    ),
                ),
                (
                    "active",
                    models.CharField(
                        blank=True, db_column="Active", max_length=8, null=True
                    ),
                ),
                (
                    "operatorid",
                    models.CharField(
                        blank=True, db_column="OperatorId", max_length=20, null=True
                    ),
                ),
                (
                    "organisation",
                    models.CharField(
                        blank=True, db_column="Organisation", max_length=50, null=True
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        blank=True, db_column="Email", max_length=320, null=True
                    ),
                ),
                (
                    "garagepass",
                    models.BooleanField(blank=True, db_column="GaragePass", null=True),
                ),
            ],
            options={"db_table": "tblClient", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyComms",
            fields=[
                (
                    "communicationno",
                    models.AutoField(
                        db_column="CommunicationNo", primary_key=True, serialize=False
                    ),
                ),
                (
                    "contactno",
                    models.IntegerField(blank=True, db_column="ContactNo", null=True),
                ),
                (
                    "sentto",
                    models.CharField(
                        blank=True, db_column="SentTo", max_length=15, null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, db_column="Type", max_length=4, null=True
                    ),
                ),
                (
                    "operatorid",
                    models.CharField(
                        blank=True, db_column="OperatorId", max_length=20, null=True
                    ),
                ),
                ("date", models.DateTimeField(blank=True, db_column="Date", null=True)),
                (
                    "message",
                    models.TextField(blank=True, db_column="Message", null=True),
                ),
                (
                    "attachement",
                    models.CharField(
                        blank=True, db_column="Attachement", max_length=500, null=True
                    ),
                ),
            ],
            options={"db_table": "tblComms", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyContact",
            fields=[
                (
                    "contactno",
                    models.AutoField(
                        db_column="ContactNo", primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(db_column="Name", max_length=60)),
                (
                    "posn",
                    models.CharField(
                        blank=True, db_column="Posn", max_length=25, null=True
                    ),
                ),
                (
                    "dept",
                    models.CharField(
                        blank=True, db_column="Dept", max_length=50, null=True
                    ),
                ),
                (
                    "busphone",
                    models.CharField(
                        blank=True, db_column="BusPhone", max_length=15, null=True
                    ),
                ),
                (
                    "homephone",
                    models.CharField(
                        blank=True, db_column="HomePhone", max_length=15, null=True
                    ),
                ),
                (
                    "faxno",
                    models.CharField(
                        blank=True, db_column="FaxNo", max_length=15, null=True
                    ),
                ),
                (
                    "mobileno",
                    models.CharField(
                        blank=True, db_column="MobileNo", max_length=15, null=True
                    ),
                ),
                (
                    "emailaddress",
                    models.CharField(
                        blank=True, db_column="EMAILAddress", max_length=320, null=True
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, db_column="Title", max_length=5, null=True
                    ),
                ),
                (
                    "surname",
                    models.CharField(
                        blank=True, db_column="Surname", max_length=50, null=True
                    ),
                ),
                (
                    "firstnames",
                    models.CharField(
                        blank=True, db_column="FirstNames", max_length=50, null=True
                    ),
                ),
                ("notes", models.TextField(blank=True, db_column="Notes", null=True)),
                (
                    "sentintroletter",
                    models.BooleanField(
                        blank=True, db_column="SentIntroLetter", null=True
                    ),
                ),
                (
                    "sentintroletterdate",
                    models.DateTimeField(
                        blank=True, db_column="SentIntroLetterDate", null=True
                    ),
                ),
                (
                    "sendemailupdates",
                    models.BooleanField(
                        blank=True, db_column="SendEmailUpdates", null=True
                    ),
                ),
            ],
            options={"db_table": "tblContact", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyContractedparty",
            fields=[
                (
                    "contractedpartyid",
                    models.AutoField(
                        db_column="ContractedPartyID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "cpname",
                    models.CharField(
                        blank=True, db_column="CPName", max_length=50, null=True
                    ),
                ),
                (
                    "addrtype",
                    models.CharField(
                        blank=True, db_column="AddrType", max_length=10, null=True
                    ),
                ),
                (
                    "addrsubno",
                    models.CharField(
                        blank=True, db_column="AddrSubNo", max_length=10, null=True
                    ),
                ),
                (
                    "addrnumber",
                    models.CharField(
                        blank=True, db_column="AddrNumber", max_length=10, null=True
                    ),
                ),
                (
                    "addrstreet",
                    models.CharField(
                        blank=True, db_column="AddrStreet", max_length=30, null=True
                    ),
                ),
                (
                    "addrstreettype",
                    models.CharField(
                        blank=True, db_column="AddrStreetType", max_length=10, null=True
                    ),
                ),
                (
                    "addrsuburb",
                    models.CharField(
                        blank=True, db_column="AddrSuburb", max_length=25, null=True
                    ),
                ),
                (
                    "addrstate",
                    models.CharField(
                        blank=True, db_column="AddrState", max_length=10, null=True
                    ),
                ),
                (
                    "addrpostcode",
                    models.IntegerField(
                        blank=True, db_column="AddrPostCode", null=True
                    ),
                ),
                (
                    "active",
                    models.BooleanField(blank=True, db_column="Active", null=True),
                ),
                (
                    "abn",
                    models.CharField(
                        blank=True, db_column="ABN", max_length=15, null=True
                    ),
                ),
                (
                    "abnverified",
                    models.BooleanField(blank=True, db_column="ABNVerified", null=True),
                ),
                (
                    "contacttitle",
                    models.CharField(
                        blank=True, db_column="ContactTitle", max_length=5, null=True
                    ),
                ),
                (
                    "contactfirstname",
                    models.CharField(
                        blank=True,
                        db_column="ContactFirstName",
                        max_length=40,
                        null=True,
                    ),
                ),
                (
                    "contactlastname",
                    models.CharField(
                        blank=True,
                        db_column="ContactLastName",
                        max_length=40,
                        null=True,
                    ),
                ),
                (
                    "contactphone",
                    models.CharField(
                        blank=True, db_column="ContactPhone", max_length=15, null=True
                    ),
                ),
                (
                    "contactmobile",
                    models.CharField(
                        blank=True, db_column="ContactMobile", max_length=15, null=True
                    ),
                ),
                (
                    "contactwork",
                    models.CharField(
                        blank=True, db_column="ContactWork", max_length=15, null=True
                    ),
                ),
                (
                    "contactfax",
                    models.CharField(
                        blank=True, db_column="ContactFax", max_length=15, null=True
                    ),
                ),
                (
                    "contactemail",
                    models.CharField(
                        blank=True, db_column="ContactEmail", max_length=40, null=True
                    ),
                ),
                (
                    "classification",
                    models.IntegerField(
                        blank=True, db_column="Classification", null=True
                    ),
                ),
                (
                    "agreementwithsx",
                    models.BooleanField(
                        blank=True, db_column="AgreementWithSX", null=True
                    ),
                ),
                (
                    "agreementdate",
                    models.DateTimeField(
                        blank=True, db_column="AgreementDate", null=True
                    ),
                ),
                (
                    "renewaldate",
                    models.DateTimeField(
                        blank=True, db_column="RenewalDate", null=True
                    ),
                ),
                (
                    "servicefee",
                    models.FloatField(blank=True, db_column="ServiceFee", null=True),
                ),
                (
                    "marketinglevy",
                    models.FloatField(blank=True, db_column="MarketingLevy", null=True),
                ),
                (
                    "monthlydepotfeepercar",
                    models.FloatField(
                        blank=True, db_column="MonthlyDepotFeePerCar", null=True
                    ),
                ),
                (
                    "bankacctname",
                    models.CharField(
                        blank=True, db_column="BankAcctName", max_length=40, null=True
                    ),
                ),
                (
                    "bankname",
                    models.CharField(
                        blank=True, db_column="BankName", max_length=30, null=True
                    ),
                ),
                (
                    "bankbsb",
                    models.CharField(
                        blank=True, db_column="BankBSB", max_length=10, null=True
                    ),
                ),
                (
                    "bankacctno",
                    models.CharField(
                        blank=True, db_column="BankAcctNo", max_length=30, null=True
                    ),
                ),
            ],
            options={"db_table": "tblContractedParty", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyCreditaccount",
            fields=[
                (
                    "accountno",
                    models.CharField(
                        db_column="AccountNo",
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "clientabn",
                    models.CharField(
                        blank=True, db_column="ClientABN", max_length=15, null=True
                    ),
                ),
                ("acctsto", models.CharField(db_column="AcctsTo", max_length=60)),
                (
                    "accposition",
                    models.CharField(
                        blank=True, db_column="AccPosition", max_length=30, null=True
                    ),
                ),
                ("phone", models.CharField(db_column="Phone", max_length=10)),
                (
                    "fax",
                    models.CharField(
                        blank=True, db_column="Fax", max_length=10, null=True
                    ),
                ),
                (
                    "dept",
                    models.CharField(
                        blank=True, db_column="Dept", max_length=50, null=True
                    ),
                ),
                (
                    "addrtype",
                    models.CharField(
                        blank=True, db_column="AddrType", max_length=10, null=True
                    ),
                ),
                (
                    "addrsubno",
                    models.CharField(
                        blank=True, db_column="AddrSubNo", max_length=10, null=True
                    ),
                ),
                ("addrnumber", models.CharField(db_column="AddrNumber", max_length=10)),
                ("addrstreet", models.CharField(db_column="AddrStreet", max_length=30)),
                (
                    "addrstreettype",
                    models.CharField(db_column="AddrStreetType", max_length=10),
                ),
                ("addrsuburb", models.CharField(db_column="AddrSuburb", max_length=25)),
                ("addrstate", models.CharField(db_column="AddrState", max_length=10)),
                ("addrpcode", models.IntegerField(db_column="AddrPCode")),
                (
                    "prefchargetype",
                    models.CharField(
                        blank=True, db_column="PrefChargeType", max_length=10, null=True
                    ),
                ),
                (
                    "fixcharge",
                    models.IntegerField(blank=True, db_column="FixCharge", null=True),
                ),
                (
                    "timecharge",
                    models.IntegerField(blank=True, db_column="TimeCharge", null=True),
                ),
                (
                    "distcharge",
                    models.IntegerField(blank=True, db_column="DistCharge", null=True),
                ),
                (
                    "creditcardtype",
                    models.CharField(
                        blank=True, db_column="CreditCardType", max_length=20, null=True
                    ),
                ),
                (
                    "creditcardnumber",
                    models.CharField(
                        blank=True,
                        db_column="CreditCardNumber",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "creditcardexpirydate",
                    models.CharField(
                        blank=True,
                        db_column="CreditCardExpiryDate",
                        max_length=5,
                        null=True,
                    ),
                ),
                (
                    "creditcardnameoncard",
                    models.CharField(
                        blank=True,
                        db_column="CreditCardNameOnCard",
                        max_length=25,
                        null=True,
                    ),
                ),
                (
                    "accountapplicationformcompleted",
                    models.CharField(
                        blank=True,
                        db_column="AccountApplicationFormCompleted",
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "completeddate",
                    models.DateTimeField(
                        blank=True, db_column="CompletedDate", null=True
                    ),
                ),
                (
                    "rateschedule",
                    models.CharField(
                        blank=True, db_column="RateSchedule", max_length=30, null=True
                    ),
                ),
                (
                    "emailaddress",
                    models.CharField(
                        blank=True, db_column="EmailAddress", max_length=320, null=True
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, db_column="Country", max_length=50, null=True
                    ),
                ),
                (
                    "tokenid",
                    models.CharField(
                        blank=True, db_column="TokenId", max_length=50, null=True
                    ),
                ),
                (
                    "signedccauth",
                    models.CharField(
                        blank=True, db_column="SignedCCAuth", max_length=1, null=True
                    ),
                ),
                (
                    "approvedby",
                    models.CharField(
                        blank=True, db_column="ApprovedBy", max_length=50, null=True
                    ),
                ),
                (
                    "currentpurchaseorder",
                    models.CharField(
                        blank=True,
                        db_column="CurrentPurchaseOrder",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "invoicingmethod",
                    models.CharField(
                        blank=True,
                        db_column="InvoicingMethod",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, db_column="Title", max_length=5, null=True
                    ),
                ),
                (
                    "surname",
                    models.CharField(
                        blank=True, db_column="Surname", max_length=50, null=True
                    ),
                ),
                (
                    "firstnames",
                    models.CharField(
                        blank=True, db_column="FirstNames", max_length=50, null=True
                    ),
                ),
                (
                    "organisation",
                    models.CharField(
                        blank=True, db_column="Organisation", max_length=50, null=True
                    ),
                ),
                (
                    "mobile",
                    models.CharField(
                        blank=True, db_column="Mobile", max_length=50, null=True
                    ),
                ),
                (
                    "cardfee",
                    models.DecimalField(
                        blank=True,
                        db_column="CardFee",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
            ],
            options={"db_table": "tblCreditAccount", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyCreditcardtypes",
            fields=[
                (
                    "cardname",
                    models.CharField(
                        db_column="Cardname",
                        max_length=25,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "surcharge",
                    models.DecimalField(
                        db_column="Surcharge", decimal_places=0, max_digits=18
                    ),
                ),
            ],
            options={"db_table": "tblCreditCardTypes", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyCrExport",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ph_name",
                    models.CharField(
                        blank=True, db_column="PH_Name", max_length=51, null=True
                    ),
                ),
                (
                    "ph_2",
                    models.CharField(
                        blank=True, db_column="PH_2", max_length=6, null=True
                    ),
                ),
                (
                    "ph_dateprinted",
                    models.CharField(
                        blank=True, db_column="PH_DatePrinted", max_length=13, null=True
                    ),
                ),
                (
                    "ph_address",
                    models.CharField(
                        blank=True, db_column="PH_Address", max_length=75, null=True
                    ),
                ),
                (
                    "ph_5",
                    models.CharField(
                        blank=True, db_column="PH_5", max_length=10, null=True
                    ),
                ),
                (
                    "ph_clientno",
                    models.IntegerField(blank=True, db_column="PH_ClientNo", null=True),
                ),
                (
                    "ph_address2",
                    models.CharField(
                        blank=True, db_column="PH_Address2", max_length=63, null=True
                    ),
                ),
                (
                    "ph_accountto",
                    models.CharField(
                        blank=True, db_column="PH_AccountTo", max_length=143, null=True
                    ),
                ),
                (
                    "ph_9",
                    models.CharField(
                        blank=True, db_column="PH_9", max_length=11, null=True
                    ),
                ),
                (
                    "ph_invoiceno",
                    models.IntegerField(
                        blank=True, db_column="PH_InvoiceNo", null=True
                    ),
                ),
                (
                    "ph_11",
                    models.CharField(
                        blank=True, db_column="PH_11", max_length=4, null=True
                    ),
                ),
                (
                    "ph_12",
                    models.CharField(
                        blank=True, db_column="PH_12", max_length=6, null=True
                    ),
                ),
                (
                    "ph_13",
                    models.CharField(
                        blank=True, db_column="PH_13", max_length=10, null=True
                    ),
                ),
                (
                    "ph_14",
                    models.CharField(
                        blank=True, db_column="PH_14", max_length=8, null=True
                    ),
                ),
                (
                    "ph_15",
                    models.CharField(
                        blank=True, db_column="PH_15", max_length=9, null=True
                    ),
                ),
                (
                    "ph_16",
                    models.CharField(
                        blank=True, db_column="PH_16", max_length=13, null=True
                    ),
                ),
                (
                    "ph_17",
                    models.CharField(
                        blank=True, db_column="PH_17", max_length=11, null=True
                    ),
                ),
                (
                    "ph_18",
                    models.CharField(
                        blank=True, db_column="PH_18", max_length=12, null=True
                    ),
                ),
                (
                    "ph_19",
                    models.CharField(
                        blank=True, db_column="PH_19", max_length=9, null=True
                    ),
                ),
                (
                    "ph_20",
                    models.CharField(
                        blank=True, db_column="PH_20", max_length=10, null=True
                    ),
                ),
                (
                    "ph_21",
                    models.CharField(
                        blank=True, db_column="PH_21", max_length=13, null=True
                    ),
                ),
                (
                    "ph_22",
                    models.CharField(
                        blank=True, db_column="PH_22", max_length=6, null=True
                    ),
                ),
                (
                    "ph_23",
                    models.CharField(
                        blank=True, db_column="PH_23", max_length=7, null=True
                    ),
                ),
                (
                    "ph_24",
                    models.CharField(
                        blank=True, db_column="PH_24", max_length=5, null=True
                    ),
                ),
                (
                    "ph_25",
                    models.CharField(
                        blank=True, db_column="PH_25", max_length=12, null=True
                    ),
                ),
                (
                    "de_datereqd",
                    models.CharField(
                        blank=True, db_column="DE_DateReqd", max_length=9, null=True
                    ),
                ),
                (
                    "de_jobnumber",
                    models.IntegerField(
                        blank=True, db_column="DE_JobNumber", null=True
                    ),
                ),
                (
                    "de_refno",
                    models.CharField(
                        blank=True, db_column="DE_RefNo", max_length=16, null=True
                    ),
                ),
                (
                    "de_cartype",
                    models.CharField(
                        blank=True, db_column="DE_CarType", max_length=11, null=True
                    ),
                ),
                (
                    "de_pickupname",
                    models.CharField(
                        blank=True, db_column="DE_PickupName", max_length=101, null=True
                    ),
                ),
                (
                    "de_pickup",
                    models.CharField(
                        blank=True, db_column="DE_Pickup", max_length=51, null=True
                    ),
                ),
                (
                    "de_destination",
                    models.CharField(
                        blank=True, db_column="DE_Destination", max_length=51, null=True
                    ),
                ),
                (
                    "de_bookingtime",
                    models.CharField(
                        blank=True, db_column="DE_BookingTime", max_length=7, null=True
                    ),
                ),
                (
                    "de_droptime",
                    models.CharField(
                        blank=True, db_column="DE_DropTime", max_length=7, null=True
                    ),
                ),
                (
                    "de_totaltime",
                    models.CharField(
                        blank=True, db_column="DE_TotalTime", max_length=7, null=True
                    ),
                ),
                (
                    "de_tripcharge",
                    models.FloatField(blank=True, db_column="DE_TripCharge", null=True),
                ),
                (
                    "de_authwaitingcharge",
                    models.FloatField(
                        blank=True, db_column="DE_AuthWaitingCharge", null=True
                    ),
                ),
                (
                    "de_extras",
                    models.FloatField(blank=True, db_column="DE_Extras", null=True),
                ),
                (
                    "de_cardriverequip",
                    models.FloatField(
                        blank=True, db_column="DE_CarDriverEquip", null=True
                    ),
                ),
                (
                    "de_totaltripcharge",
                    models.FloatField(
                        blank=True, db_column="DE_TotalTripCharge", null=True
                    ),
                ),
                (
                    "gf1_1",
                    models.CharField(
                        blank=True, db_column="GF1_1", max_length=40, null=True
                    ),
                ),
                (
                    "gf1_2",
                    models.CharField(
                        blank=True, db_column="GF1_2", max_length=30, null=True
                    ),
                ),
                (
                    "gf1_rtotal0",
                    models.FloatField(blank=True, db_column="GF1_RTotal0", null=True),
                ),
                (
                    "pf_pagenofm",
                    models.CharField(
                        blank=True, db_column="PF_PageNofM", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "CREXPORT", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyDespatch",
            fields=[
                (
                    "despatchno",
                    models.AutoField(
                        db_column="DespatchNo", primary_key=True, serialize=False
                    ),
                ),
                (
                    "jobnumber",
                    models.IntegerField(blank=True, db_column="JobNumber", null=True),
                ),
                (
                    "driverno",
                    models.IntegerField(blank=True, db_column="DriverNo", null=True),
                ),
                (
                    "despatchdate",
                    models.DateTimeField(
                        blank=True, db_column="DespatchDate", null=True
                    ),
                ),
                (
                    "response",
                    models.CharField(
                        blank=True, db_column="Response", max_length=10, null=True
                    ),
                ),
                (
                    "responsedate",
                    models.DateTimeField(
                        blank=True, db_column="ResponseDate", null=True
                    ),
                ),
                (
                    "details",
                    models.TextField(blank=True, db_column="Details", null=True),
                ),
            ],
            options={"db_table": "tblDespatch", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyDestinationsv",
            fields=[
                (
                    "jobnumber",
                    models.IntegerField(
                        db_column="JobNumber", primary_key=True, serialize=False
                    ),
                ),
                ("clientno", models.IntegerField(db_column="ClientNo")),
                ("destno", models.IntegerField(db_column="DestNo")),
                (
                    "versionstamp",
                    models.CharField(db_column="VersionStamp", max_length=16),
                ),
                (
                    "suburb",
                    models.CharField(
                        blank=True, db_column="Suburb", max_length=25, null=True
                    ),
                ),
                (
                    "postcode",
                    models.IntegerField(blank=True, db_column="PostCode", null=True),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, db_column="Address", max_length=50, null=True
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, db_column="Location", max_length=50, null=True
                    ),
                ),
                (
                    "instructions",
                    models.CharField(
                        blank=True, db_column="Instructions", max_length=250, null=True
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, db_column="Phone", max_length=15, null=True
                    ),
                ),
            ],
            options={"db_table": "tblDestinationsV", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyDriver",
            fields=[
                (
                    "driverno",
                    models.IntegerField(
                        db_column="DriverNo", primary_key=True, serialize=False
                    ),
                ),
                ("drivername", models.CharField(db_column="DriverName", max_length=50)),
                ("dob", models.DateTimeField(db_column="DOB")),
                (
                    "addrtype",
                    models.CharField(
                        blank=True, db_column="AddrType", max_length=10, null=True
                    ),
                ),
                (
                    "addrsubno",
                    models.CharField(
                        blank=True, db_column="AddrSubNo", max_length=10, null=True
                    ),
                ),
                ("addrnumber", models.CharField(db_column="AddrNumber", max_length=10)),
                ("addrstreet", models.CharField(db_column="AddrStreet", max_length=30)),
                (
                    "addrstreettype",
                    models.CharField(db_column="AddrStreetType", max_length=10),
                ),
                ("addrsuburb", models.CharField(db_column="AddrSuburb", max_length=25)),
                ("addrstate", models.CharField(db_column="AddrState", max_length=10)),
                ("addrpostcode", models.IntegerField(db_column="AddrPostCode")),
                (
                    "homeph",
                    models.CharField(
                        blank=True, db_column="HomePh", max_length=15, null=True
                    ),
                ),
                (
                    "mobileph",
                    models.CharField(
                        blank=True, db_column="MobilePh", max_length=10, null=True
                    ),
                ),
                (
                    "faxno",
                    models.CharField(
                        blank=True, db_column="FaxNo", max_length=15, null=True
                    ),
                ),
                (
                    "partnername",
                    models.CharField(
                        blank=True, db_column="PartnerName", max_length=50, null=True
                    ),
                ),
                (
                    "partnerph",
                    models.CharField(
                        blank=True, db_column="PartnerPh", max_length=15, null=True
                    ),
                ),
                (
                    "commissionrate",
                    models.IntegerField(
                        blank=True, db_column="CommissionRate", null=True
                    ),
                ),
                ("capacity", models.CharField(db_column="Capacity", max_length=1)),
                (
                    "drvagreesigned",
                    models.SmallIntegerField(
                        blank=True, db_column="DrvAgreeSigned", null=True
                    ),
                ),
                (
                    "startdate",
                    models.DateTimeField(blank=True, db_column="StartDate", null=True),
                ),
                (
                    "terminationdate",
                    models.DateTimeField(
                        blank=True, db_column="TerminationDate", null=True
                    ),
                ),
                (
                    "abn",
                    models.CharField(
                        blank=True, db_column="ABN", max_length=15, null=True
                    ),
                ),
                (
                    "radioserialno",
                    models.CharField(
                        blank=True, db_column="RadioSerialNo", max_length=10, null=True
                    ),
                ),
                ("dlno", models.CharField(db_column="DLNo", max_length=10)),
                (
                    "dlexpdate",
                    models.DateTimeField(blank=True, db_column="DLExpDate", null=True),
                ),
                (
                    "dcno",
                    models.CharField(
                        blank=True, db_column="DCNo", max_length=10, null=True
                    ),
                ),
                (
                    "dcexpdate",
                    models.DateTimeField(blank=True, db_column="DCExpDate", null=True),
                ),
                (
                    "carno",
                    models.CharField(
                        blank=True, db_column="CarNo", max_length=6, null=True
                    ),
                ),
                (
                    "chqname",
                    models.CharField(
                        blank=True, db_column="ChqName", max_length=40, null=True
                    ),
                ),
                (
                    "chqaddr",
                    models.CharField(
                        blank=True, db_column="ChqAddr", max_length=50, null=True
                    ),
                ),
                (
                    "chqsuburb",
                    models.CharField(
                        blank=True, db_column="ChqSuburb", max_length=25, null=True
                    ),
                ),
                (
                    "chqstate",
                    models.CharField(
                        blank=True, db_column="ChqState", max_length=10, null=True
                    ),
                ),
                (
                    "chqpcode",
                    models.IntegerField(blank=True, db_column="ChqPCode", null=True),
                ),
                (
                    "chqphone",
                    models.CharField(
                        blank=True, db_column="ChqPhone", max_length=15, null=True
                    ),
                ),
                (
                    "chqabn",
                    models.CharField(
                        blank=True, db_column="ChqABN", max_length=15, null=True
                    ),
                ),
                (
                    "deductradio",
                    models.DecimalField(
                        blank=True,
                        db_column="DeductRadio",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "deductother1",
                    models.DecimalField(
                        blank=True,
                        db_column="DeductOther1",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "deductother2",
                    models.DecimalField(
                        blank=True,
                        db_column="DeductOther2",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("active", models.CharField(db_column="Active", max_length=1)),
                (
                    "firstname",
                    models.CharField(
                        blank=True, db_column="FirstName", max_length=40, null=True
                    ),
                ),
                (
                    "lastname",
                    models.CharField(
                        blank=True, db_column="LastName", max_length=40, null=True
                    ),
                ),
                (
                    "emailaddress",
                    models.CharField(
                        blank=True, db_column="EmailAddress", max_length=50, null=True
                    ),
                ),
                (
                    "isfemale",
                    models.BooleanField(blank=True, db_column="IsFemale", null=True),
                ),
                (
                    "issmoker",
                    models.BooleanField(blank=True, db_column="IsSmoker", null=True),
                ),
                (
                    "ishilevel",
                    models.BooleanField(blank=True, db_column="IsHiLevel", null=True),
                ),
                (
                    "opmanualno",
                    models.CharField(
                        blank=True, db_column="OpManualNo", max_length=40, null=True
                    ),
                ),
                (
                    "opmanualversion",
                    models.CharField(
                        blank=True, db_column="OpManualVersion", max_length=8, null=True
                    ),
                ),
                (
                    "opmanualissuedate",
                    models.DateTimeField(
                        blank=True, db_column="OpManualIssueDate", null=True
                    ),
                ),
                (
                    "opmanualreturndate",
                    models.DateTimeField(
                        blank=True, db_column="OpManualReturnDate", null=True
                    ),
                ),
                (
                    "despatchemail",
                    models.CharField(
                        blank=True, db_column="DespatchEmail", max_length=100, null=True
                    ),
                ),
            ],
            options={"db_table": "tblDriver", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyDriverdaysworked",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "driverno",
                    models.IntegerField(blank=True, db_column="DriverNo", null=True),
                ),
                (
                    "daysworked",
                    models.IntegerField(blank=True, db_column="DaysWorked", null=True),
                ),
            ],
            options={"db_table": "tblDriverDaysWorked", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyDrivernote",
            fields=[
                (
                    "noteid",
                    models.IntegerField(
                        db_column="NoteID", primary_key=True, serialize=False
                    ),
                ),
                ("dateraised", models.DateTimeField(db_column="DateRaised")),
                ("raisedby", models.CharField(db_column="RaisedBy", max_length=20)),
                ("details", models.CharField(db_column="Details", max_length=255)),
            ],
            options={"db_table": "tblDriverNote", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyDriverRequest",
            fields=[
                (
                    "driverrequestid",
                    models.AutoField(
                        db_column="DriverRequestId", primary_key=True, serialize=False
                    ),
                ),
                (
                    "displayname",
                    models.CharField(db_column="DisplayName", max_length=25),
                ),
                (
                    "abbreviation",
                    models.CharField(db_column="Abbreviation", max_length=9),
                ),
                ("orderid", models.IntegerField(db_column="OrderID")),
                ("isactive", models.BooleanField(db_column="IsActive")),
            ],
            options={"db_table": "tblDriverRequest", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyEquipment",
            fields=[
                (
                    "equipmentid",
                    models.AutoField(
                        db_column="EquipmentId", primary_key=True, serialize=False
                    ),
                ),
                (
                    "displayname",
                    models.CharField(db_column="DisplayName", max_length=25),
                ),
                (
                    "abbreviation",
                    models.CharField(db_column="Abbreviation", max_length=8),
                ),
                ("orderid", models.IntegerField(db_column="OrderID")),
                ("isactive", models.BooleanField(db_column="IsActive")),
            ],
            options={"db_table": "tblEquipment", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyJobsreport",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "jobnumber",
                    models.IntegerField(blank=True, db_column="JobNumber", null=True),
                ),
                (
                    "clientno",
                    models.IntegerField(blank=True, db_column="ClientNo", null=True),
                ),
                (
                    "clientname",
                    models.CharField(
                        blank=True, db_column="ClientName", max_length=50, null=True
                    ),
                ),
                (
                    "daterequired",
                    models.CharField(
                        blank=True, db_column="DateRequired", max_length=10, null=True
                    ),
                ),
                (
                    "timerequired",
                    models.CharField(
                        blank=True, db_column="TimeRequired", max_length=4, null=True
                    ),
                ),
                (
                    "carno",
                    models.CharField(
                        blank=True, db_column="CarNo", max_length=6, null=True
                    ),
                ),
                (
                    "runno",
                    models.IntegerField(blank=True, db_column="RunNo", null=True),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True, db_column="Status", max_length=20, null=True
                    ),
                ),
                (
                    "driverno",
                    models.IntegerField(blank=True, db_column="DriverNo", null=True),
                ),
                (
                    "carposn",
                    models.IntegerField(blank=True, db_column="CarPosn", null=True),
                ),
                (
                    "carcount",
                    models.IntegerField(blank=True, db_column="CarCount", null=True),
                ),
                (
                    "bookingtype",
                    models.CharField(
                        blank=True, db_column="BookingType", max_length=1, null=True
                    ),
                ),
                (
                    "paymentmethod",
                    models.CharField(
                        blank=True, db_column="PaymentMethod", max_length=20, null=True
                    ),
                ),
                (
                    "cartype",
                    models.CharField(
                        blank=True, db_column="CarType", max_length=10, null=True
                    ),
                ),
                (
                    "pickupname",
                    models.CharField(
                        blank=True, db_column="PickupName", max_length=100, null=True
                    ),
                ),
                (
                    "firstpickup",
                    models.CharField(
                        blank=True, db_column="FirstPickup", max_length=129, null=True
                    ),
                ),
                (
                    "lastdestination",
                    models.CharField(
                        blank=True,
                        db_column="LastDestination",
                        max_length=135,
                        null=True,
                    ),
                ),
                (
                    "clientphone",
                    models.CharField(
                        blank=True, db_column="ClientPhone", max_length=50, null=True
                    ),
                ),
            ],
            options={"db_table": "tblJobsReport", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyKnockbackreasons",
            fields=[
                (
                    "reason",
                    models.CharField(
                        db_column="Reason",
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                    ),
                )
            ],
            options={"db_table": "tblKnockbackReasons", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyKnockbacks",
            fields=[
                (
                    "knockbackid",
                    models.AutoField(
                        db_column="KnockBackID", primary_key=True, serialize=False
                    ),
                ),
                ("jobid", models.IntegerField(db_column="JobID")),
                ("driverno", models.IntegerField(db_column="DriverNo")),
                ("jobdate", models.DateTimeField(db_column="JobDate")),
                ("jobtime", models.CharField(db_column="JobTime", max_length=4)),
                ("passenger", models.CharField(db_column="Passenger", max_length=30)),
                ("pickup", models.CharField(db_column="Pickup", max_length=100)),
                (
                    "destination",
                    models.CharField(db_column="Destination", max_length=100),
                ),
                ("knockback", models.CharField(db_column="Knockback", max_length=255)),
            ],
            options={"db_table": "tblKnockbacks", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyMessageids",
            fields=[
                (
                    "messageid",
                    models.AutoField(
                        db_column="MessageId", primary_key=True, serialize=False
                    ),
                ),
                ("jobnumber", models.IntegerField(db_column="JobNumber")),
                (
                    "remindermessageid",
                    models.CharField(db_column="ReminderMessageId", max_length=36),
                ),
            ],
            options={"db_table": "tblMessageIds", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyNote",
            fields=[
                (
                    "noteno",
                    models.AutoField(
                        db_column="NoteNo", primary_key=True, serialize=False
                    ),
                ),
                (
                    "clientno",
                    models.IntegerField(blank=True, db_column="ClientNo", null=True),
                ),
                ("date", models.DateTimeField(blank=True, db_column="Date", null=True)),
                ("note", models.TextField(blank=True, db_column="Note", null=True)),
                (
                    "operatorid",
                    models.CharField(
                        blank=True, db_column="OperatorId", max_length=20, null=True
                    ),
                ),
            ],
            options={"db_table": "tblNote", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyParams",
            fields=[
                (
                    "paramno",
                    models.AutoField(
                        db_column="ParamNo", primary_key=True, serialize=False
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, db_column="Description", max_length=50, null=True
                    ),
                ),
                (
                    "numericvalue",
                    models.FloatField(blank=True, db_column="NumericValue", null=True),
                ),
                (
                    "datevalue",
                    models.DateTimeField(blank=True, db_column="DateValue", null=True),
                ),
                (
                    "textvalue",
                    models.CharField(
                        blank=True, db_column="TextValue", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "tblParams", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyPayment",
            fields=[
                (
                    "paymentno",
                    models.AutoField(
                        db_column="PaymentNo", primary_key=True, serialize=False
                    ),
                ),
                (
                    "clientno",
                    models.IntegerField(blank=True, db_column="ClientNo", null=True),
                ),
                (
                    "invoiceno",
                    models.IntegerField(blank=True, db_column="InvoiceNo", null=True),
                ),
                (
                    "jobnumber",
                    models.IntegerField(blank=True, db_column="JobNumber", null=True),
                ),
                ("date", models.DateTimeField(blank=True, db_column="Date", null=True)),
                (
                    "totalamount",
                    models.DecimalField(
                        blank=True,
                        db_column="TotalAmount",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "gstamount",
                    models.DecimalField(
                        blank=True,
                        db_column="GSTAmount",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "creditcardsurcharge",
                    models.DecimalField(
                        blank=True,
                        db_column="CreditCardSurcharge",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "paymentmethod",
                    models.CharField(
                        blank=True, db_column="PaymentMethod", max_length=50, null=True
                    ),
                ),
                (
                    "operatorid",
                    models.CharField(
                        blank=True, db_column="OperatorId", max_length=20, null=True
                    ),
                ),
                (
                    "paymenttype",
                    models.CharField(
                        blank=True, db_column="PaymentType", max_length=50, null=True
                    ),
                ),
                (
                    "month",
                    models.SmallIntegerField(blank=True, db_column="Month", null=True),
                ),
                (
                    "year",
                    models.SmallIntegerField(blank=True, db_column="Year", null=True),
                ),
                (
                    "ewayauthcode",
                    models.CharField(
                        blank=True, db_column="eWayAuthCode", max_length=50, null=True
                    ),
                ),
                (
                    "ewaytrxnstatus",
                    models.CharField(
                        blank=True, db_column="eWayTrxnStatus", max_length=50, null=True
                    ),
                ),
                (
                    "ewaytrxnerror",
                    models.CharField(
                        blank=True, db_column="eWayTrxnError", max_length=100, null=True
                    ),
                ),
                (
                    "ewaytrxnnumber",
                    models.CharField(
                        blank=True, db_column="eWayTrxnNumber", max_length=50, null=True
                    ),
                ),
                (
                    "ewayreturnamount",
                    models.CharField(
                        blank=True,
                        db_column="eWayReturnAmount",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "daterequired",
                    models.CharField(
                        blank=True, db_column="DateRequired", max_length=10, null=True
                    ),
                ),
            ],
            options={"db_table": "tblPayment", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyPaymentMethod",
            fields=[
                (
                    "method",
                    models.CharField(
                        db_column="Method",
                        max_length=35,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "forbooking",
                    models.IntegerField(blank=True, db_column="ForBooking", null=True),
                ),
                (
                    "abbrev",
                    models.CharField(
                        blank=True, db_column="Abbrev", max_length=5, null=True
                    ),
                ),
                (
                    "displayname",
                    models.CharField(db_column="DisplayName", max_length=30),
                ),
                ("orderid", models.IntegerField(db_column="OrderID")),
                ("isactive", models.BooleanField(db_column="IsActive")),
                ("isdefault", models.BooleanField(db_column="IsDefault")),
            ],
            options={"db_table": "tblPaymentMethod", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyPaytype",
            fields=[
                (
                    "paytype",
                    models.CharField(
                        db_column="PayType",
                        max_length=1,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("paydesc", models.CharField(db_column="PayDesc", max_length=20)),
            ],
            options={"db_table": "tblPayType", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyPickupV",
            fields=[
                (
                    "jobnumber",
                    models.IntegerField(
                        db_column="JobNumber", primary_key=True, serialize=False
                    ),
                ),
                ("clientno", models.IntegerField(db_column="ClientNo")),
                ("pickupno", models.IntegerField(db_column="PickupNo")),
                (
                    "versionstamp",
                    models.CharField(db_column="VersionStamp", max_length=16),
                ),
                ("name", models.CharField(db_column="Name", max_length=100)),
                ("suburb", models.CharField(db_column="Suburb", max_length=25)),
                (
                    "postcode",
                    models.IntegerField(blank=True, db_column="PostCode", null=True),
                ),
                ("address", models.CharField(db_column="Address", max_length=50)),
                (
                    "location",
                    models.CharField(
                        blank=True, db_column="Location", max_length=50, null=True
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, db_column="Phone", max_length=15, null=True
                    ),
                ),
                (
                    "instructions",
                    models.CharField(
                        blank=True, db_column="Instructions", max_length=250, null=True
                    ),
                ),
            ],
            options={"db_table": "tblPickupsV", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyPostcodes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pcode", models.CharField(db_column="Pcode", max_length=4)),
                (
                    "locality",
                    models.CharField(
                        blank=True, db_column="Locality", max_length=50, null=True
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, db_column="State", max_length=3, null=True
                    ),
                ),
                ("visible", models.BooleanField(db_column="Visible")),
                ("sort", models.IntegerField(blank=True, db_column="Sort", null=True)),
            ],
            options={"db_table": "tblPostcodes", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyRateSchedule",
            fields=[
                (
                    "ratescheduleid",
                    models.IntegerField(
                        db_column="RateScheduleID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "rateschedule",
                    models.CharField(
                        blank=True, db_column="RateSchedule", max_length=30, null=True
                    ),
                ),
                (
                    "displayname",
                    models.CharField(db_column="DisplayName", max_length=30),
                ),
                (
                    "abbreviation",
                    models.CharField(db_column="Abbreviation", max_length=5),
                ),
                ("orderid", models.IntegerField(db_column="OrderID")),
                ("isactive", models.BooleanField(db_column="IsActive")),
                ("isdefault", models.BooleanField(db_column="IsDefault")),
            ],
            options={"db_table": "tblRateSchedule", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacySCCDAccountTypes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, db_column="Type", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "SCCD_AccountTypes", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacySCCDCapacity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "emp_capacity",
                    models.CharField(
                        blank=True, db_column="EmpCapacity", max_length=255, null=True
                    ),
                ),
                (
                    "capacity_code",
                    models.CharField(
                        blank=True, db_column="CapacityCode", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "SCCD_Capacity", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyStatus",
            fields=[
                (
                    "statusid",
                    models.AutoField(
                        db_column="StatusId", primary_key=True, serialize=False
                    ),
                ),
                (
                    "displayname",
                    models.CharField(db_column="DisplayName", max_length=10),
                ),
                (
                    "abbreviation",
                    models.CharField(db_column="Abbreviation", max_length=3),
                ),
                ("orderid", models.IntegerField(db_column="OrderID")),
                ("isactive", models.BooleanField(db_column="IsActive")),
            ],
            options={"db_table": "tblStatus", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyStreetAbbreviations",
            fields=[
                (
                    "abbreviation",
                    models.CharField(
                        db_column="Abbreviation",
                        max_length=4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "fullwording",
                    models.CharField(db_column="FullWording", max_length=20),
                ),
            ],
            options={"db_table": "tblStreetAbbreviations", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacySysDiagrams",
            fields=[
                ("name", models.CharField(max_length=128)),
                ("principal_id", models.IntegerField()),
                ("diagram_id", models.AutoField(primary_key=True, serialize=False)),
                ("version", models.IntegerField(blank=True, null=True)),
                ("definition", models.BinaryField(blank=True, null=True)),
            ],
            options={"db_table": "sysdiagrams", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacySysParams",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nextjobnumber", models.IntegerField(db_column="NextJobNumber")),
                (
                    "nextinvoicenumber",
                    models.IntegerField(db_column="NextInvoiceNumber"),
                ),
            ],
            options={"db_table": "tblSysParams", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyTaxInvoiceBookings",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                )
            ],
            options={"db_table": "tblTaxInvoiceBookings", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyTaxInvoiceData",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("clientno", models.IntegerField(db_column="ClientNo")),
                (
                    "title",
                    models.CharField(
                        blank=True, db_column="Title", max_length=5, null=True
                    ),
                ),
                ("name", models.CharField(db_column="Name", max_length=50)),
                ("accountno", models.CharField(db_column="AccountNo", max_length=10)),
                (
                    "refno",
                    models.CharField(
                        blank=True, db_column="RefNo", max_length=15, null=True
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, db_column="Category", max_length=1, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True, db_column="Status", max_length=10, null=True
                    ),
                ),
                (
                    "addrtype",
                    models.CharField(
                        blank=True, db_column="AddrType", max_length=10, null=True
                    ),
                ),
                (
                    "addrsubno",
                    models.CharField(
                        blank=True, db_column="AddrSubNo", max_length=10, null=True
                    ),
                ),
                ("addrnumber", models.CharField(db_column="AddrNumber", max_length=10)),
                ("addrstreet", models.CharField(db_column="AddrStreet", max_length=30)),
                (
                    "addrstreettype",
                    models.CharField(
                        blank=True, db_column="AddrStreetType", max_length=10, null=True
                    ),
                ),
                ("addrsuburb", models.CharField(db_column="AddrSuburb", max_length=25)),
                (
                    "addrstate",
                    models.CharField(
                        blank=True, db_column="AddrState", max_length=10, null=True
                    ),
                ),
                (
                    "addrpostcode",
                    models.IntegerField(
                        blank=True, db_column="AddrPostCode", null=True
                    ),
                ),
                ("jobnumber", models.IntegerField(db_column="JobNumber")),
                (
                    "daterequired",
                    models.CharField(db_column="DateRequired", max_length=8),
                ),
                (
                    "timerequired",
                    models.CharField(db_column="TimeRequired", max_length=4),
                ),
                (
                    "bookingcontactname",
                    models.CharField(db_column="BookingContactName", max_length=25),
                ),
                (
                    "bookingcontactphone",
                    models.CharField(
                        blank=True,
                        db_column="BookingContactPhone",
                        max_length=40,
                        null=True,
                    ),
                ),
                (
                    "paymentmethod",
                    models.CharField(
                        blank=True, db_column="PaymentMethod", max_length=20, null=True
                    ),
                ),
                (
                    "bookingtype",
                    models.CharField(
                        blank=True, db_column="BookingType", max_length=1, null=True
                    ),
                ),
                (
                    "bookingstatus",
                    models.CharField(
                        blank=True, db_column="BookingStatus", max_length=20, null=True
                    ),
                ),
                (
                    "tripcharge",
                    models.DecimalField(
                        blank=True,
                        db_column="TripCharge",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "authwaitingcharge",
                    models.DecimalField(
                        blank=True,
                        db_column="AuthWaitingCharge",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "extras",
                    models.DecimalField(
                        blank=True,
                        db_column="Extras",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "totaltripcharge",
                    models.DecimalField(
                        blank=True,
                        db_column="TotalTripCharge",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "customerprice",
                    models.DecimalField(
                        blank=True,
                        db_column="CustomerPrice",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "driverscommission",
                    models.DecimalField(
                        blank=True,
                        db_column="DriversCommission",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "pickuptime",
                    models.CharField(
                        blank=True, db_column="PickupTime", max_length=4, null=True
                    ),
                ),
                (
                    "droptime",
                    models.CharField(
                        blank=True, db_column="DropTime", max_length=4, null=True
                    ),
                ),
                (
                    "totaltime",
                    models.CharField(
                        blank=True, db_column="TotalTime", max_length=4, null=True
                    ),
                ),
                (
                    "kilometers",
                    models.CharField(
                        blank=True, db_column="Kilometers", max_length=4, null=True
                    ),
                ),
                (
                    "categoryname",
                    models.CharField(
                        blank=True, db_column="CategoryName", max_length=40, null=True
                    ),
                ),
                (
                    "special",
                    models.CharField(
                        blank=True, db_column="Special", max_length=4, null=True
                    ),
                ),
                (
                    "contactname",
                    models.CharField(
                        blank=True, db_column="ContactName", max_length=60, null=True
                    ),
                ),
                (
                    "contactposn",
                    models.CharField(
                        blank=True, db_column="ContactPosn", max_length=30, null=True
                    ),
                ),
                (
                    "contactdept",
                    models.CharField(
                        blank=True, db_column="ContactDept", max_length=50, null=True
                    ),
                ),
                ("destsuburb", models.CharField(db_column="DestSuburb", max_length=30)),
                (
                    "destpostcode",
                    models.IntegerField(
                        blank=True, db_column="DestPostCode", null=True
                    ),
                ),
                (
                    "destaddress",
                    models.CharField(
                        blank=True, db_column="DestAddress", max_length=50, null=True
                    ),
                ),
                (
                    "destlocation",
                    models.CharField(
                        blank=True, db_column="DestLocation", max_length=50, null=True
                    ),
                ),
                (
                    "pickupname",
                    models.CharField(db_column="PickupName", max_length=100),
                ),
                (
                    "pickupsuburb",
                    models.CharField(db_column="PickupSuburb", max_length=30),
                ),
                ("pickuppostcode", models.IntegerField(db_column="PickupPostCode")),
                (
                    "pickupaddress",
                    models.CharField(db_column="PickupAddress", max_length=50),
                ),
                (
                    "pickuplocation",
                    models.CharField(db_column="PickupLocation", max_length=50),
                ),
                ("invoiceno", models.IntegerField(db_column="InvoiceNo")),
                (
                    "cartype",
                    models.CharField(
                        blank=True, db_column="CarType", max_length=10, null=True
                    ),
                ),
                (
                    "cardriverequip",
                    models.DecimalField(
                        blank=True,
                        db_column="CarDriverEquip",
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                    ),
                ),
            ],
            options={"db_table": "tblTaxInvoiceData", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyTaxInvoices",
            fields=[
                (
                    "taxinvoiceno",
                    models.AutoField(
                        db_column="TaxInvoiceNo", primary_key=True, serialize=False
                    ),
                ),
                ("created", models.DateTimeField(db_column="Created")),
                (
                    "emailed",
                    models.DateTimeField(blank=True, db_column="Emailed", null=True),
                ),
                (
                    "emailedto",
                    models.CharField(
                        blank=True, db_column="EmailedTo", max_length=255, null=True
                    ),
                ),
                (
                    "paymentmethod",
                    models.CharField(db_column="PaymentMethod", max_length=20),
                ),
                (
                    "applicabilitystart",
                    models.CharField(db_column="ApplicabilityStart", max_length=10),
                ),
                (
                    "applicabilityend",
                    models.CharField(db_column="ApplicabilityEnd", max_length=10),
                ),
                (
                    "adhocamount",
                    models.FloatField(blank=True, db_column="AdhocAmount", null=True),
                ),
                (
                    "adhocgst",
                    models.FloatField(blank=True, db_column="AdhocGst", null=True),
                ),
                (
                    "adhocsurcharge",
                    models.FloatField(
                        blank=True, db_column="AdhocSurcharge", null=True
                    ),
                ),
                (
                    "comments",
                    models.TextField(blank=True, db_column="Comments", null=True),
                ),
            ],
            options={"db_table": "tblTaxInvoices", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyTitles",
            fields=[
                (
                    "title",
                    models.CharField(
                        db_column="Title",
                        max_length=5,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "orderid",
                    models.IntegerField(blank=True, db_column="OrderID", null=True),
                ),
                (
                    "isclient",
                    models.BooleanField(blank=True, db_column="IsClient", null=True),
                ),
            ],
            options={"db_table": "tblTitles", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyUpdateReasons",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("screen", models.CharField(db_column="Screen", max_length=25)),
                (
                    "updordelreason",
                    models.CharField(
                        blank=True, db_column="UpdOrDelReason", max_length=50, null=True
                    ),
                ),
                (
                    "updordelperson",
                    models.CharField(
                        blank=True, db_column="UpdOrDelPerson", max_length=20, null=True
                    ),
                ),
                (
                    "updordeldate",
                    models.DateTimeField(
                        blank=True, db_column="UpdOrDelDate", null=True
                    ),
                ),
                (
                    "jobno",
                    models.IntegerField(blank=True, db_column="JobNo", null=True),
                ),
                (
                    "clientno",
                    models.IntegerField(blank=True, db_column="ClientNo", null=True),
                ),
                (
                    "accountno",
                    models.CharField(
                        blank=True, db_column="AccountNo", max_length=50, null=True
                    ),
                ),
            ],
            options={"db_table": "tblUpdateReasons", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyUsers",
            fields=[
                (
                    "operatorid",
                    models.CharField(
                        db_column="OperatorId",
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("password", models.CharField(db_column="Password", max_length=10)),
                (
                    "loggedin",
                    models.SmallIntegerField(
                        blank=True, db_column="LoggedIn", null=True
                    ),
                ),
                (
                    "lastlogindate",
                    models.DateTimeField(
                        blank=True, db_column="LastLoginDate", null=True
                    ),
                ),
                (
                    "computer",
                    models.CharField(
                        blank=True, db_column="Computer", max_length=50, null=True
                    ),
                ),
                ("isadmin", models.BooleanField(db_column="IsAdmin")),
            ],
            options={"db_table": "tblUsers", "managed": False},
        ),
        migrations.CreateModel(
            name="NavigationAdminmenupartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "adminmenutext",
                    models.CharField(
                        blank=True, db_column="AdminMenuText", max_length=255, null=True
                    ),
                ),
                (
                    "adminmenuposition",
                    models.CharField(
                        blank=True,
                        db_column="AdminMenuPosition",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "onadminmenu",
                    models.BooleanField(blank=True, db_column="OnAdminMenu", null=True),
                ),
            ],
            options={"db_table": "Navigation_AdminMenuPartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="NavigationMenupartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "menutext",
                    models.CharField(
                        blank=True, db_column="MenuText", max_length=255, null=True
                    ),
                ),
                (
                    "menuposition",
                    models.CharField(
                        blank=True, db_column="MenuPosition", max_length=255, null=True
                    ),
                ),
                (
                    "menuid",
                    models.IntegerField(blank=True, db_column="MenuId", null=True),
                ),
            ],
            options={"db_table": "Navigation_MenuPartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="O8BootstrapcarouselBootstrapcarouselpartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "count",
                    models.SmallIntegerField(blank=True, db_column="Count", null=True),
                ),
                (
                    "groupid",
                    models.IntegerField(blank=True, db_column="GroupId", null=True),
                ),
            ],
            options={
                "db_table": "O8_BootstrapCarousel_BootstrapCarouselPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="O8BootstrapcarouselImageitempartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "sort",
                    models.SmallIntegerField(blank=True, db_column="Sort", null=True),
                ),
                (
                    "groupid",
                    models.IntegerField(blank=True, db_column="GroupId", null=True),
                ),
                (
                    "captionstyling",
                    models.CharField(
                        blank=True,
                        db_column="CaptionStyling",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "O8_BootstrapCarousel_ImageItemPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="O8SccdCarouselCarouselrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "outerdivid",
                    models.CharField(
                        blank=True, db_column="OuterDivId", max_length=255, null=True
                    ),
                ),
                (
                    "outerdivclass",
                    models.CharField(
                        blank=True, db_column="OuterDivClass", max_length=255, null=True
                    ),
                ),
                (
                    "imagedata",
                    models.CharField(
                        blank=True, db_column="ImageData", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "O8_SCCD_Carousel_CarouselRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardAliasActionrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "area",
                    models.CharField(
                        blank=True, db_column="Area", max_length=255, null=True
                    ),
                ),
                (
                    "controller",
                    models.CharField(
                        blank=True, db_column="Controller", max_length=255, null=True
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        blank=True, db_column="Action", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "Orchard_Alias_ActionRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardAliasAliasrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "path",
                    models.CharField(
                        blank=True, db_column="Path", max_length=2048, null=True
                    ),
                ),
                (
                    "action_id",
                    models.IntegerField(blank=True, db_column="Action_id", null=True),
                ),
                (
                    "routevalues",
                    models.TextField(blank=True, db_column="RouteValues", null=True),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True, db_column="Source", max_length=256, null=True
                    ),
                ),
            ],
            options={"db_table": "Orchard_Alias_AliasRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardAutorouteAutoroutepartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "contentitemrecord_id",
                    models.IntegerField(
                        blank=True, db_column="ContentItemRecord_id", null=True
                    ),
                ),
                (
                    "custompattern",
                    models.CharField(
                        blank=True,
                        db_column="CustomPattern",
                        max_length=2048,
                        null=True,
                    ),
                ),
                (
                    "usecustompattern",
                    models.BooleanField(
                        blank=True, db_column="UseCustomPattern", null=True
                    ),
                ),
                (
                    "displayalias",
                    models.CharField(
                        blank=True, db_column="DisplayAlias", max_length=2048, null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Autoroute_AutoroutePartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardBlogsBlogarchivespartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "blogid",
                    models.IntegerField(blank=True, db_column="BlogId", null=True),
                ),
            ],
            options={
                "db_table": "Orchard_Blogs_BlogArchivesPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardBlogsBlogpartarchiverecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                ("year", models.IntegerField(blank=True, db_column="Year", null=True)),
                (
                    "month",
                    models.IntegerField(blank=True, db_column="Month", null=True),
                ),
                (
                    "postcount",
                    models.IntegerField(blank=True, db_column="PostCount", null=True),
                ),
                (
                    "blogpart_id",
                    models.IntegerField(blank=True, db_column="BlogPart_id", null=True),
                ),
            ],
            options={
                "db_table": "Orchard_Blogs_BlogPartArchiveRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardBlogsRecentblogpostspartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "blogid",
                    models.IntegerField(blank=True, db_column="BlogId", null=True),
                ),
                (
                    "count",
                    models.IntegerField(blank=True, db_column="Count", null=True),
                ),
            ],
            options={
                "db_table": "Orchard_Blogs_RecentBlogPostsPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardCommentsCommentpartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True, db_column="Author", max_length=255, null=True
                    ),
                ),
                (
                    "sitename",
                    models.CharField(
                        blank=True, db_column="SiteName", max_length=255, null=True
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, db_column="UserName", max_length=255, null=True
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        blank=True, db_column="Email", max_length=255, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True, db_column="Status", max_length=255, null=True
                    ),
                ),
                (
                    "commentdateutc",
                    models.DateTimeField(
                        blank=True, db_column="CommentDateUtc", null=True
                    ),
                ),
                (
                    "commenttext",
                    models.TextField(blank=True, db_column="CommentText", null=True),
                ),
                (
                    "commentedon",
                    models.IntegerField(blank=True, db_column="CommentedOn", null=True),
                ),
                (
                    "commentedoncontainer",
                    models.IntegerField(
                        blank=True, db_column="CommentedOnContainer", null=True
                    ),
                ),
                (
                    "repliedon",
                    models.IntegerField(blank=True, db_column="RepliedOn", null=True),
                ),
                (
                    "position",
                    models.DecimalField(
                        blank=True,
                        db_column="Position",
                        decimal_places=5,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "commentspartrecord_id",
                    models.IntegerField(
                        blank=True, db_column="CommentsPartRecord_id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Comments_CommentPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardCommentsCommentspartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "commentsshown",
                    models.BooleanField(
                        blank=True, db_column="CommentsShown", null=True
                    ),
                ),
                (
                    "commentsactive",
                    models.BooleanField(
                        blank=True, db_column="CommentsActive", null=True
                    ),
                ),
                (
                    "threadedcomments",
                    models.BooleanField(
                        blank=True, db_column="ThreadedComments", null=True
                    ),
                ),
                (
                    "commentscount",
                    models.IntegerField(
                        blank=True, db_column="CommentsCount", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Comments_CommentsPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardContentpickerContentmenuitempartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "contentmenuitemrecord_id",
                    models.IntegerField(
                        blank=True, db_column="ContentMenuItemRecord_id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_ContentPicker_ContentMenuItemPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardCustomformsCustomformpartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "contentitemrecord_id",
                    models.IntegerField(
                        blank=True, db_column="ContentItemRecord_id", null=True
                    ),
                ),
                (
                    "contenttype",
                    models.CharField(
                        blank=True, db_column="ContentType", max_length=255, null=True
                    ),
                ),
                (
                    "custommessage",
                    models.BooleanField(
                        blank=True, db_column="CustomMessage", null=True
                    ),
                ),
                (
                    "message",
                    models.TextField(blank=True, db_column="Message", null=True),
                ),
                (
                    "redirect",
                    models.BooleanField(blank=True, db_column="Redirect", null=True),
                ),
                (
                    "redirecturl",
                    models.TextField(blank=True, db_column="RedirectUrl", null=True),
                ),
                (
                    "savecontentitem",
                    models.BooleanField(
                        blank=True, db_column="SaveContentItem", null=True
                    ),
                ),
                (
                    "submitbuttontext",
                    models.CharField(
                        blank=True,
                        db_column="SubmitButtonText",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_CustomForms_CustomFormPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardFrameworkContentitemrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                ("data", models.TextField(blank=True, db_column="Data", null=True)),
                (
                    "contenttype_id",
                    models.IntegerField(
                        blank=True, db_column="ContentType_id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Framework_ContentItemRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardFrameworkContentitemversionrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "number",
                    models.IntegerField(blank=True, db_column="Number", null=True),
                ),
                (
                    "published",
                    models.BooleanField(blank=True, db_column="Published", null=True),
                ),
                (
                    "latest",
                    models.BooleanField(blank=True, db_column="Latest", null=True),
                ),
                ("data", models.TextField(blank=True, db_column="Data", null=True)),
                (
                    "contentitemrecord_id",
                    models.IntegerField(db_column="ContentItemRecord_id"),
                ),
            ],
            options={
                "db_table": "Orchard_Framework_ContentItemVersionRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardFrameworkContenttyperecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=255, null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Framework_ContentTypeRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardFrameworkCulturerecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "culture",
                    models.CharField(
                        blank=True, db_column="Culture", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "Orchard_Framework_CultureRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardFrameworkDatamigrationrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "datamigrationclass",
                    models.CharField(
                        blank=True,
                        db_column="DataMigrationClass",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "version",
                    models.IntegerField(blank=True, db_column="Version", null=True),
                ),
            ],
            options={
                "db_table": "Orchard_Framework_DataMigrationRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardLayoutsElementblueprint",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "baseelementtypename",
                    models.CharField(
                        blank=True,
                        db_column="BaseElementTypeName",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "elementtypename",
                    models.CharField(
                        blank=True,
                        db_column="ElementTypeName",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "elementdisplayname",
                    models.CharField(
                        blank=True,
                        db_column="ElementDisplayName",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "elementdescription",
                    models.CharField(
                        blank=True,
                        db_column="ElementDescription",
                        max_length=2048,
                        null=True,
                    ),
                ),
                (
                    "elementcategory",
                    models.CharField(
                        blank=True,
                        db_column="ElementCategory",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "baseelementstate",
                    models.TextField(
                        blank=True, db_column="BaseElementState", null=True
                    ),
                ),
            ],
            options={"db_table": "Orchard_Layouts_ElementBlueprint", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardLayoutsLayoutpartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "contentitemrecord_id",
                    models.IntegerField(
                        blank=True, db_column="ContentItemRecord_id", null=True
                    ),
                ),
                (
                    "templateid",
                    models.IntegerField(blank=True, db_column="TemplateId", null=True),
                ),
            ],
            options={"db_table": "Orchard_Layouts_LayoutPartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardMedialibraryMediapartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "mimetype",
                    models.CharField(
                        blank=True, db_column="MimeType", max_length=255, null=True
                    ),
                ),
                (
                    "caption",
                    models.TextField(blank=True, db_column="Caption", null=True),
                ),
                (
                    "alternatetext",
                    models.TextField(blank=True, db_column="AlternateText", null=True),
                ),
                (
                    "folderpath",
                    models.CharField(
                        blank=True, db_column="FolderPath", max_length=2048, null=True
                    ),
                ),
                (
                    "filename",
                    models.CharField(
                        blank=True, db_column="FileName", max_length=2048, null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_MediaLibrary_MediaPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardMediaMediasettingspartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "uploadallowedfiletypewhitelist",
                    models.CharField(
                        blank=True,
                        db_column="UploadAllowedFileTypeWhitelist",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Media_MediaSettingsPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardMediaprocessingFilenamerecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                ("path", models.TextField(blank=True, db_column="Path", null=True)),
                (
                    "filename",
                    models.TextField(blank=True, db_column="FileName", null=True),
                ),
                (
                    "imageprofilepartrecord_id",
                    models.IntegerField(
                        blank=True, db_column="ImageProfilePartRecord_id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_MediaProcessing_FileNameRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardMediaprocessingFilterrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, db_column="Category", max_length=64, null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, db_column="Type", max_length=64, null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, db_column="Description", max_length=255, null=True
                    ),
                ),
                ("state", models.TextField(blank=True, db_column="State", null=True)),
                (
                    "position",
                    models.IntegerField(blank=True, db_column="Position", null=True),
                ),
                (
                    "imageprofilepartrecord_id",
                    models.IntegerField(
                        blank=True, db_column="ImageProfilePartRecord_id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_MediaProcessing_FilterRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardMediaprocessingImageprofilepartrecord",
            fields=[
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=255, null=True
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_MediaProcessing_ImageProfilePartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardOutputcacheCacheitemrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "cachedonutc",
                    models.DateTimeField(
                        blank=True, db_column="CachedOnUtc", null=True
                    ),
                ),
                (
                    "duration",
                    models.IntegerField(blank=True, db_column="Duration", null=True),
                ),
                (
                    "gracetime",
                    models.IntegerField(blank=True, db_column="GraceTime", null=True),
                ),
                (
                    "validuntilutc",
                    models.DateTimeField(
                        blank=True, db_column="ValidUntilUtc", null=True
                    ),
                ),
                (
                    "storeduntilutc",
                    models.DateTimeField(
                        blank=True, db_column="StoredUntilUtc", null=True
                    ),
                ),
                (
                    "output",
                    models.BinaryField(blank=True, db_column="Output", null=True),
                ),
                (
                    "contenttype",
                    models.CharField(
                        blank=True, db_column="ContentType", max_length=255, null=True
                    ),
                ),
                (
                    "querystring",
                    models.CharField(
                        blank=True, db_column="QueryString", max_length=2048, null=True
                    ),
                ),
                (
                    "cachekey",
                    models.CharField(
                        blank=True, db_column="CacheKey", max_length=2048, null=True
                    ),
                ),
                (
                    "invariantcachekey",
                    models.CharField(
                        blank=True,
                        db_column="InvariantCacheKey",
                        max_length=2048,
                        null=True,
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True, db_column="Url", max_length=2048, null=True
                    ),
                ),
                (
                    "tenant",
                    models.CharField(
                        blank=True, db_column="Tenant", max_length=255, null=True
                    ),
                ),
                (
                    "statuscode",
                    models.IntegerField(blank=True, db_column="StatusCode", null=True),
                ),
                ("tags", models.TextField(blank=True, db_column="Tags", null=True)),
            ],
            options={
                "db_table": "Orchard_OutputCache_CacheItemRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardOutputcacheCacheparameterrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "duration",
                    models.IntegerField(blank=True, db_column="Duration", null=True),
                ),
                (
                    "gracetime",
                    models.IntegerField(blank=True, db_column="GraceTime", null=True),
                ),
                (
                    "routekey",
                    models.CharField(
                        blank=True, db_column="RouteKey", max_length=255, null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_OutputCache_CacheParameterRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardPackagingPackagingsource",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "feedtitle",
                    models.CharField(
                        blank=True, db_column="FeedTitle", max_length=255, null=True
                    ),
                ),
                (
                    "feedurl",
                    models.CharField(
                        blank=True, db_column="FeedUrl", max_length=2048, null=True
                    ),
                ),
            ],
            options={"db_table": "Orchard_Packaging_PackagingSource", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardProjectionsDecimalfieldindexrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "propertyname",
                    models.CharField(
                        blank=True, db_column="PropertyName", max_length=255, null=True
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        blank=True,
                        db_column="Value",
                        decimal_places=5,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "fieldindexpartrecord_id",
                    models.IntegerField(
                        blank=True, db_column="FieldIndexPartRecord_Id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Projections_DecimalFieldIndexRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardProjectionsDoublefieldindexrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "propertyname",
                    models.CharField(
                        blank=True, db_column="PropertyName", max_length=255, null=True
                    ),
                ),
                ("value", models.FloatField(blank=True, db_column="Value", null=True)),
                (
                    "fieldindexpartrecord_id",
                    models.IntegerField(
                        blank=True, db_column="FieldIndexPartRecord_Id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Projections_DoubleFieldIndexRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardProjectionsFieldindexpartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                )
            ],
            options={
                "db_table": "Orchard_Projections_FieldIndexPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardProjectionsFiltergrouprecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "querypartrecord_id",
                    models.IntegerField(
                        blank=True, db_column="QueryPartRecord_id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Projections_FilterGroupRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardProjectionsFilterrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, db_column="Category", max_length=64, null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, db_column="Type", max_length=64, null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, db_column="Description", max_length=255, null=True
                    ),
                ),
                ("state", models.TextField(blank=True, db_column="State", null=True)),
                (
                    "position",
                    models.IntegerField(blank=True, db_column="Position", null=True),
                ),
                (
                    "filtergrouprecord_id",
                    models.IntegerField(
                        blank=True, db_column="FilterGroupRecord_id", null=True
                    ),
                ),
            ],
            options={"db_table": "Orchard_Projections_FilterRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardProjectionsIntegerfieldindexrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "propertyname",
                    models.CharField(
                        blank=True, db_column="PropertyName", max_length=255, null=True
                    ),
                ),
                (
                    "value",
                    models.BigIntegerField(blank=True, db_column="Value", null=True),
                ),
                (
                    "fieldindexpartrecord_id",
                    models.IntegerField(
                        blank=True, db_column="FieldIndexPartRecord_Id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Projections_IntegerFieldIndexRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardProjectionsLayoutrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, db_column="Category", max_length=64, null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, db_column="Type", max_length=64, null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, db_column="Description", max_length=255, null=True
                    ),
                ),
                ("state", models.TextField(blank=True, db_column="State", null=True)),
                (
                    "displaytype",
                    models.CharField(
                        blank=True, db_column="DisplayType", max_length=64, null=True
                    ),
                ),
                (
                    "display",
                    models.IntegerField(blank=True, db_column="Display", null=True),
                ),
                (
                    "querypartrecord_id",
                    models.IntegerField(
                        blank=True, db_column="QueryPartRecord_id", null=True
                    ),
                ),
                (
                    "groupproperty_id",
                    models.IntegerField(
                        blank=True, db_column="GroupProperty_id", null=True
                    ),
                ),
            ],
            options={"db_table": "Orchard_Projections_LayoutRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardProjectionsMemberbindingrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, db_column="Type", max_length=255, null=True
                    ),
                ),
                (
                    "member",
                    models.CharField(
                        blank=True, db_column="Member", max_length=64, null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, db_column="Description", max_length=500, null=True
                    ),
                ),
                (
                    "displayname",
                    models.CharField(
                        blank=True, db_column="DisplayName", max_length=64, null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Projections_MemberBindingRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardProjectionsNavigationquerypartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "items",
                    models.IntegerField(blank=True, db_column="Items", null=True),
                ),
                ("skip", models.IntegerField(blank=True, db_column="Skip", null=True)),
                (
                    "querypartrecord_id",
                    models.IntegerField(
                        blank=True, db_column="QueryPartRecord_id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Projections_NavigationQueryPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardProjectionsProjectionpartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "items",
                    models.IntegerField(blank=True, db_column="Items", null=True),
                ),
                (
                    "itemsperpage",
                    models.IntegerField(
                        blank=True, db_column="ItemsPerPage", null=True
                    ),
                ),
                ("skip", models.IntegerField(blank=True, db_column="Skip", null=True)),
                (
                    "pagersuffix",
                    models.CharField(
                        blank=True, db_column="PagerSuffix", max_length=255, null=True
                    ),
                ),
                (
                    "maxitems",
                    models.IntegerField(blank=True, db_column="MaxItems", null=True),
                ),
                (
                    "displaypager",
                    models.BooleanField(
                        blank=True, db_column="DisplayPager", null=True
                    ),
                ),
                (
                    "querypartrecord_id",
                    models.IntegerField(
                        blank=True, db_column="QueryPartRecord_id", null=True
                    ),
                ),
                (
                    "layoutrecord_id",
                    models.IntegerField(
                        blank=True, db_column="LayoutRecord_Id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Projections_ProjectionPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardProjectionsPropertyrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, db_column="Category", max_length=64, null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, db_column="Type", max_length=64, null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, db_column="Description", max_length=255, null=True
                    ),
                ),
                ("state", models.TextField(blank=True, db_column="State", null=True)),
                (
                    "position",
                    models.IntegerField(blank=True, db_column="Position", null=True),
                ),
                (
                    "layoutrecord_id",
                    models.IntegerField(
                        blank=True, db_column="LayoutRecord_id", null=True
                    ),
                ),
                (
                    "excludefromdisplay",
                    models.BooleanField(
                        blank=True, db_column="ExcludeFromDisplay", null=True
                    ),
                ),
                (
                    "createlabel",
                    models.BooleanField(blank=True, db_column="CreateLabel", null=True),
                ),
                (
                    "label",
                    models.CharField(
                        blank=True, db_column="Label", max_length=255, null=True
                    ),
                ),
                (
                    "linktocontent",
                    models.BooleanField(
                        blank=True, db_column="LinkToContent", null=True
                    ),
                ),
                (
                    "customizepropertyhtml",
                    models.BooleanField(
                        blank=True, db_column="CustomizePropertyHtml", null=True
                    ),
                ),
                (
                    "custompropertytag",
                    models.CharField(
                        blank=True,
                        db_column="CustomPropertyTag",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "custompropertycss",
                    models.CharField(
                        blank=True,
                        db_column="CustomPropertyCss",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "customizelabelhtml",
                    models.BooleanField(
                        blank=True, db_column="CustomizeLabelHtml", null=True
                    ),
                ),
                (
                    "customlabeltag",
                    models.CharField(
                        blank=True, db_column="CustomLabelTag", max_length=64, null=True
                    ),
                ),
                (
                    "customlabelcss",
                    models.CharField(
                        blank=True, db_column="CustomLabelCss", max_length=64, null=True
                    ),
                ),
                (
                    "customizewrapperhtml",
                    models.BooleanField(
                        blank=True, db_column="CustomizeWrapperHtml", null=True
                    ),
                ),
                (
                    "customwrappertag",
                    models.CharField(
                        blank=True,
                        db_column="CustomWrapperTag",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "customwrappercss",
                    models.CharField(
                        blank=True,
                        db_column="CustomWrapperCss",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "noresulttext",
                    models.TextField(blank=True, db_column="NoResultText", null=True),
                ),
                (
                    "zeroisempty",
                    models.BooleanField(blank=True, db_column="ZeroIsEmpty", null=True),
                ),
                (
                    "hideempty",
                    models.BooleanField(blank=True, db_column="HideEmpty", null=True),
                ),
                (
                    "rewriteoutput",
                    models.BooleanField(
                        blank=True, db_column="RewriteOutput", null=True
                    ),
                ),
                (
                    "rewritetext",
                    models.TextField(blank=True, db_column="RewriteText", null=True),
                ),
                (
                    "striphtmltags",
                    models.BooleanField(
                        blank=True, db_column="StripHtmlTags", null=True
                    ),
                ),
                (
                    "trimlength",
                    models.BooleanField(blank=True, db_column="TrimLength", null=True),
                ),
                (
                    "addellipsis",
                    models.BooleanField(blank=True, db_column="AddEllipsis", null=True),
                ),
                (
                    "maxlength",
                    models.IntegerField(blank=True, db_column="MaxLength", null=True),
                ),
                (
                    "trimonwordboundary",
                    models.BooleanField(
                        blank=True, db_column="TrimOnWordBoundary", null=True
                    ),
                ),
                (
                    "preservelines",
                    models.BooleanField(
                        blank=True, db_column="PreserveLines", null=True
                    ),
                ),
                (
                    "trimwhitespace",
                    models.BooleanField(
                        blank=True, db_column="TrimWhiteSpace", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Projections_PropertyRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardProjectionsQuerypartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                )
            ],
            options={
                "db_table": "Orchard_Projections_QueryPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardProjectionsSortcriterionrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, db_column="Category", max_length=64, null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, db_column="Type", max_length=64, null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, db_column="Description", max_length=255, null=True
                    ),
                ),
                ("state", models.TextField(blank=True, db_column="State", null=True)),
                (
                    "position",
                    models.IntegerField(blank=True, db_column="Position", null=True),
                ),
                (
                    "querypartrecord_id",
                    models.IntegerField(
                        blank=True, db_column="QueryPartRecord_id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Projections_SortCriterionRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardProjectionsStringfieldindexrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "propertyname",
                    models.CharField(
                        blank=True, db_column="PropertyName", max_length=255, null=True
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        blank=True, db_column="Value", max_length=4000, null=True
                    ),
                ),
                (
                    "fieldindexpartrecord_id",
                    models.IntegerField(
                        blank=True, db_column="FieldIndexPartRecord_Id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Projections_StringFieldIndexRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardRolesPermissionrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=255, null=True
                    ),
                ),
                (
                    "featurename",
                    models.CharField(
                        blank=True, db_column="FeatureName", max_length=255, null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, db_column="Description", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "Orchard_Roles_PermissionRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardRolesRolerecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "Orchard_Roles_RoleRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardRolesRolespermissionsrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "role_id",
                    models.IntegerField(blank=True, db_column="Role_id", null=True),
                ),
                (
                    "permission_id",
                    models.IntegerField(
                        blank=True, db_column="Permission_id", null=True
                    ),
                ),
                (
                    "rolerecord_id",
                    models.IntegerField(
                        blank=True, db_column="RoleRecord_Id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Roles_RolesPermissionsRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardRolesUserrolespartrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "userid",
                    models.IntegerField(blank=True, db_column="UserId", null=True),
                ),
                (
                    "role_id",
                    models.IntegerField(blank=True, db_column="Role_id", null=True),
                ),
            ],
            options={"db_table": "Orchard_Roles_UserRolesPartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardTagsContenttagrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "tagrecord_id",
                    models.IntegerField(
                        blank=True, db_column="TagRecord_Id", null=True
                    ),
                ),
                (
                    "tagspartrecord_id",
                    models.IntegerField(
                        blank=True, db_column="TagsPartRecord_Id", null=True
                    ),
                ),
            ],
            options={"db_table": "Orchard_Tags_ContentTagRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardTagsTagrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "tagname",
                    models.CharField(
                        blank=True, db_column="TagName", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "Orchard_Tags_TagRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardTagsTagspartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                )
            ],
            options={"db_table": "Orchard_Tags_TagsPartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardTaxonomiesTaxonomypartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "termtypename",
                    models.CharField(
                        blank=True, db_column="TermTypeName", max_length=255, null=True
                    ),
                ),
                (
                    "isinternal",
                    models.BooleanField(blank=True, db_column="IsInternal", null=True),
                ),
            ],
            options={
                "db_table": "Orchard_Taxonomies_TaxonomyPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardTaxonomiesTermcontentitem",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "field",
                    models.CharField(
                        blank=True, db_column="Field", max_length=50, null=True
                    ),
                ),
                (
                    "termrecord_id",
                    models.IntegerField(
                        blank=True, db_column="TermRecord_id", null=True
                    ),
                ),
                (
                    "termspartrecord_id",
                    models.IntegerField(
                        blank=True, db_column="TermsPartRecord_id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Taxonomies_TermContentItem",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardTaxonomiesTermpartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "path",
                    models.CharField(
                        blank=True, db_column="Path", max_length=255, null=True
                    ),
                ),
                (
                    "taxonomyid",
                    models.IntegerField(blank=True, db_column="TaxonomyId", null=True),
                ),
                (
                    "count",
                    models.IntegerField(blank=True, db_column="Count", null=True),
                ),
                (
                    "weight",
                    models.IntegerField(blank=True, db_column="Weight", null=True),
                ),
                (
                    "selectable",
                    models.BooleanField(blank=True, db_column="Selectable", null=True),
                ),
            ],
            options={"db_table": "Orchard_Taxonomies_TermPartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardTaxonomiesTermspartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                )
            ],
            options={
                "db_table": "Orchard_Taxonomies_TermsPartRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardUsersUserpartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, db_column="UserName", max_length=255, null=True
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        blank=True, db_column="Email", max_length=255, null=True
                    ),
                ),
                (
                    "normalizedusername",
                    models.CharField(
                        blank=True,
                        db_column="NormalizedUserName",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True, db_column="Password", max_length=255, null=True
                    ),
                ),
                (
                    "passwordformat",
                    models.CharField(
                        blank=True,
                        db_column="PasswordFormat",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "hashalgorithm",
                    models.CharField(
                        blank=True, db_column="HashAlgorithm", max_length=255, null=True
                    ),
                ),
                (
                    "passwordsalt",
                    models.CharField(
                        blank=True, db_column="PasswordSalt", max_length=255, null=True
                    ),
                ),
                (
                    "registrationstatus",
                    models.CharField(
                        blank=True,
                        db_column="RegistrationStatus",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "emailstatus",
                    models.CharField(
                        blank=True, db_column="EmailStatus", max_length=255, null=True
                    ),
                ),
                (
                    "emailchallengetoken",
                    models.CharField(
                        blank=True,
                        db_column="EmailChallengeToken",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={"db_table": "Orchard_Users_UserPartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardWidgetsLayerpartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=255, null=True
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, db_column="Description", null=True),
                ),
                (
                    "layerrule",
                    models.TextField(blank=True, db_column="LayerRule", null=True),
                ),
            ],
            options={"db_table": "Orchard_Widgets_LayerPartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardWidgetsWidgetpartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, db_column="Title", max_length=255, null=True
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, db_column="Position", max_length=255, null=True
                    ),
                ),
                (
                    "zone",
                    models.CharField(
                        blank=True, db_column="Zone", max_length=255, null=True
                    ),
                ),
                (
                    "rendertitle",
                    models.BooleanField(blank=True, db_column="RenderTitle", null=True),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "Orchard_Widgets_WidgetPartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardWorkflowsActivityrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=255, null=True
                    ),
                ),
                ("x", models.IntegerField(blank=True, db_column="X", null=True)),
                ("y", models.IntegerField(blank=True, db_column="Y", null=True)),
                ("state", models.TextField(blank=True, db_column="State", null=True)),
                (
                    "start",
                    models.BooleanField(blank=True, db_column="Start", null=True),
                ),
                (
                    "workflowdefinitionrecord_id",
                    models.IntegerField(
                        blank=True, db_column="WorkflowDefinitionRecord_id", null=True
                    ),
                ),
            ],
            options={"db_table": "Orchard_Workflows_ActivityRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="OrchardWorkflowsAwaitingactivityrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "activityrecord_id",
                    models.IntegerField(
                        blank=True, db_column="ActivityRecord_id", null=True
                    ),
                ),
                (
                    "workflowrecord_id",
                    models.IntegerField(
                        blank=True, db_column="WorkflowRecord_id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Workflows_AwaitingActivityRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardWorkflowsTransitionrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "sourceendpoint",
                    models.CharField(
                        blank=True,
                        db_column="SourceEndpoint",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "destinationendpoint",
                    models.CharField(
                        blank=True,
                        db_column="DestinationEndpoint",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "sourceactivityrecord_id",
                    models.IntegerField(
                        blank=True, db_column="SourceActivityRecord_id", null=True
                    ),
                ),
                (
                    "destinationactivityrecord_id",
                    models.IntegerField(
                        blank=True, db_column="DestinationActivityRecord_id", null=True
                    ),
                ),
                (
                    "workflowdefinitionrecord_id",
                    models.IntegerField(
                        blank=True, db_column="WorkflowDefinitionRecord_id", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Workflows_TransitionRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardWorkflowsWorkflowdefinitionrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "enabled",
                    models.BooleanField(blank=True, db_column="Enabled", null=True),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=1024, null=True
                    ),
                ),
            ],
            options={
                "db_table": "Orchard_Workflows_WorkflowDefinitionRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrchardWorkflowsWorkflowrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                ("state", models.TextField(blank=True, db_column="State", null=True)),
                (
                    "workflowdefinitionrecord_id",
                    models.IntegerField(
                        blank=True, db_column="WorkflowDefinitionRecord_id", null=True
                    ),
                ),
                (
                    "contentitemrecord_id",
                    models.IntegerField(
                        blank=True, db_column="ContentItemRecord_id", null=True
                    ),
                ),
            ],
            options={"db_table": "Orchard_Workflows_WorkflowRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="SchedulingScheduledtaskrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "tasktype",
                    models.CharField(
                        blank=True, db_column="TaskType", max_length=255, null=True
                    ),
                ),
                (
                    "scheduledutc",
                    models.DateTimeField(
                        blank=True, db_column="ScheduledUtc", null=True
                    ),
                ),
                (
                    "contentitemversionrecord_id",
                    models.IntegerField(
                        blank=True, db_column="ContentItemVersionRecord_id", null=True
                    ),
                ),
            ],
            options={"db_table": "Scheduling_ScheduledTaskRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="SettingsContentfielddefinitionrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=255, null=True
                    ),
                ),
            ],
            options={
                "db_table": "Settings_ContentFieldDefinitionRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SettingsContentpartdefinitionrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=255, null=True
                    ),
                ),
                (
                    "hidden",
                    models.BooleanField(blank=True, db_column="Hidden", null=True),
                ),
                (
                    "settings",
                    models.TextField(blank=True, db_column="Settings", null=True),
                ),
            ],
            options={
                "db_table": "Settings_ContentPartDefinitionRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SettingsContentpartfielddefinitionrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=255, null=True
                    ),
                ),
                (
                    "settings",
                    models.TextField(blank=True, db_column="Settings", null=True),
                ),
                (
                    "contentfielddefinitionrecord_id",
                    models.IntegerField(
                        blank=True,
                        db_column="ContentFieldDefinitionRecord_id",
                        null=True,
                    ),
                ),
                (
                    "contentpartdefinitionrecord_id",
                    models.IntegerField(
                        blank=True,
                        db_column="ContentPartDefinitionRecord_Id",
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "Settings_ContentPartFieldDefinitionRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SettingsContenttypedefinitionrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=255, null=True
                    ),
                ),
                (
                    "displayname",
                    models.CharField(
                        blank=True, db_column="DisplayName", max_length=255, null=True
                    ),
                ),
                (
                    "hidden",
                    models.BooleanField(blank=True, db_column="Hidden", null=True),
                ),
                (
                    "settings",
                    models.TextField(blank=True, db_column="Settings", null=True),
                ),
            ],
            options={
                "db_table": "Settings_ContentTypeDefinitionRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SettingsContenttypepartdefinitionrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "settings",
                    models.TextField(blank=True, db_column="Settings", null=True),
                ),
                (
                    "contentpartdefinitionrecord_id",
                    models.IntegerField(
                        blank=True,
                        db_column="ContentPartDefinitionRecord_id",
                        null=True,
                    ),
                ),
                (
                    "contenttypedefinitionrecord_id",
                    models.IntegerField(
                        blank=True,
                        db_column="ContentTypeDefinitionRecord_Id",
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "Settings_ContentTypePartDefinitionRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SettingsShelldescriptorrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "serialnumber",
                    models.IntegerField(
                        blank=True, db_column="SerialNumber", null=True
                    ),
                ),
            ],
            options={"db_table": "Settings_ShellDescriptorRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="SettingsShellfeaturerecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=255, null=True
                    ),
                ),
                (
                    "shelldescriptorrecord_id",
                    models.IntegerField(
                        blank=True, db_column="ShellDescriptorRecord_id", null=True
                    ),
                ),
            ],
            options={"db_table": "Settings_ShellFeatureRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="SettingsShellfeaturestaterecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=255, null=True
                    ),
                ),
                (
                    "installstate",
                    models.CharField(
                        blank=True, db_column="InstallState", max_length=255, null=True
                    ),
                ),
                (
                    "enablestate",
                    models.CharField(
                        blank=True, db_column="EnableState", max_length=255, null=True
                    ),
                ),
                (
                    "shellstaterecord_id",
                    models.IntegerField(
                        blank=True, db_column="ShellStateRecord_Id", null=True
                    ),
                ),
            ],
            options={"db_table": "Settings_ShellFeatureStateRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="SettingsShellparameterrecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "component",
                    models.CharField(
                        blank=True, db_column="Component", max_length=255, null=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=255, null=True
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        blank=True, db_column="Value", max_length=255, null=True
                    ),
                ),
                (
                    "shelldescriptorrecord_id",
                    models.IntegerField(
                        blank=True, db_column="ShellDescriptorRecord_id", null=True
                    ),
                ),
            ],
            options={"db_table": "Settings_ShellParameterRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="SettingsShellstaterecord",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "unused",
                    models.CharField(
                        blank=True, db_column="Unused", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "Settings_ShellStateRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="TitleTitlepartrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "contentitemrecord_id",
                    models.IntegerField(
                        blank=True, db_column="ContentItemRecord_id", null=True
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, db_column="Title", max_length=1024, null=True
                    ),
                ),
            ],
            options={"db_table": "Title_TitlePartRecord", "managed": False},
        ),
        migrations.CreateModel(
            name="VxsolutionsOrchardMetatagsMetatagsrecord",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "keywords",
                    models.CharField(
                        blank=True, db_column="Keywords", max_length=255, null=True
                    ),
                ),
                (
                    "keywordsinherited",
                    models.BooleanField(
                        blank=True, db_column="KeywordsInherited", null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, db_column="Description", max_length=255, null=True
                    ),
                ),
                (
                    "descriptioninherited",
                    models.BooleanField(
                        blank=True, db_column="DescriptionInherited", null=True
                    ),
                ),
                (
                    "metatag1name",
                    models.CharField(
                        blank=True, db_column="MetaTag1Name", max_length=255, null=True
                    ),
                ),
                (
                    "metatag1value",
                    models.CharField(
                        blank=True, db_column="MetaTag1Value", max_length=255, null=True
                    ),
                ),
                (
                    "metatag1inherited",
                    models.BooleanField(
                        blank=True, db_column="MetaTag1Inherited", null=True
                    ),
                ),
                (
                    "metatag2name",
                    models.CharField(
                        blank=True, db_column="MetaTag2Name", max_length=255, null=True
                    ),
                ),
                (
                    "metatag2value",
                    models.CharField(
                        blank=True, db_column="MetaTag2Value", max_length=255, null=True
                    ),
                ),
                (
                    "metatag2inherited",
                    models.BooleanField(
                        blank=True, db_column="MetaTag2Inherited", null=True
                    ),
                ),
            ],
            options={
                "db_table": "VXSolutions_Orchard_MetaTags_MetaTagsRecord",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LegacyAssignments",
            fields=[
                (
                    "driver_no",
                    models.ForeignKey(
                        db_column="DriverNo",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="scbp_legacy.LegacyDriver",
                    ),
                )
            ],
            options={"db_table": "tblAssignments", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyDestinations",
            fields=[
                (
                    "jobnumber",
                    models.ForeignKey(
                        db_column="JobNumber",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        related_name="destinations",
                        serialize=False,
                        to="scbp_legacy.LegacyBookings",
                    ),
                ),
                ("destno", models.IntegerField(db_column="DestNo")),
                (
                    "suburb",
                    models.CharField(
                        blank=True, db_column="Suburb", max_length=50, null=True
                    ),
                ),
                (
                    "postcode",
                    models.IntegerField(blank=True, db_column="PostCode", null=True),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, db_column="Address", max_length=50, null=True
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, db_column="Location", max_length=50, null=True
                    ),
                ),
                (
                    "instructions",
                    models.CharField(
                        blank=True, db_column="Instructions", max_length=250, null=True
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, db_column="Phone", max_length=15, null=True
                    ),
                ),
            ],
            options={"db_table": "tblDestinations", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyFrequentdestinations",
            fields=[
                (
                    "clientno",
                    models.ForeignKey(
                        db_column="ClientNo",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="scbp_legacy.LegacyClient",
                    ),
                ),
                ("seqno", models.IntegerField(db_column="SeqNo")),
                (
                    "suburb",
                    models.CharField(
                        blank=True, db_column="Suburb", max_length=50, null=True
                    ),
                ),
                (
                    "pcode",
                    models.IntegerField(blank=True, db_column="PCode", null=True),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, db_column="Address", max_length=50, null=True
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, db_column="Location", max_length=50, null=True
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, db_column="Phone", max_length=15, null=True
                    ),
                ),
                (
                    "instructions",
                    models.CharField(
                        blank=True, db_column="Instructions", max_length=250, null=True
                    ),
                ),
            ],
            options={"db_table": "tblFrequentDestinations", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyFrequentpickups",
            fields=[
                (
                    "clientno",
                    models.ForeignKey(
                        db_column="ClientNo",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="scbp_legacy.LegacyClient",
                    ),
                ),
                ("seqno", models.IntegerField(db_column="SeqNo")),
                ("name", models.CharField(db_column="Name", max_length=25)),
                ("suburb", models.CharField(db_column="Suburb", max_length=50)),
                (
                    "pcode",
                    models.IntegerField(blank=True, db_column="PCode", null=True),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, db_column="Address", max_length=50, null=True
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, db_column="Location", max_length=50, null=True
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, db_column="Phone", max_length=15, null=True
                    ),
                ),
                (
                    "instructions",
                    models.CharField(
                        blank=True, db_column="Instructions", max_length=250, null=True
                    ),
                ),
            ],
            options={"db_table": "tblFrequentPickups", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyPickups",
            fields=[
                (
                    "jobnumber",
                    models.ForeignKey(
                        db_column="JobNumber",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        related_name="pickups",
                        serialize=False,
                        to="scbp_legacy.LegacyBookings",
                    ),
                ),
                ("pickupno", models.IntegerField(db_column="PickupNo")),
                ("name", models.CharField(db_column="Name", max_length=100)),
                (
                    "suburb",
                    models.CharField(
                        blank=True, db_column="Suburb", max_length=50, null=True
                    ),
                ),
                (
                    "postcode",
                    models.IntegerField(blank=True, db_column="PostCode", null=True),
                ),
                ("address", models.CharField(db_column="Address", max_length=50)),
                (
                    "location",
                    models.CharField(
                        blank=True, db_column="Location", max_length=50, null=True
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, db_column="Phone", max_length=15, null=True
                    ),
                ),
                (
                    "instructions",
                    models.CharField(
                        blank=True, db_column="Instructions", max_length=250, null=True
                    ),
                ),
            ],
            options={"db_table": "tblPickups", "managed": False},
        ),
        migrations.CreateModel(
            name="LegacyBookingLog",
            fields=[
                (
                    "log_number",
                    models.IntegerField(
                        db_column="LogNumber", primary_key=True, serialize=False
                    ),
                ),
                ("datetime", models.DateTimeField(db_column="DateTime")),
                (
                    "operator_id",
                    models.CharField(db_column="OperatorId", max_length=20),
                ),
                (
                    "log_note",
                    models.CharField(
                        blank=True, db_column="LogNote", max_length=500, null=True
                    ),
                ),
            ],
            options={"db_table": "tblBookingLog", "managed": False},
        ),
        migrations.CreateModel(
            name="AddressBookContacts",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="Id", max_length=36, primary_key=True, serialize=False
                    ),
                ),
                ("title", models.CharField(db_column="Title", max_length=10)),
                ("firstname", models.CharField(db_column="FirstName", max_length=70)),
                ("lastname", models.CharField(db_column="LastName", max_length=70)),
                (
                    "roleposition",
                    models.CharField(
                        blank=True, db_column="RolePosition", max_length=128, null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(db_column="Description", max_length=255),
                ),
                ("mobile", models.CharField(db_column="Mobile", max_length=50)),
                ("address", models.CharField(db_column="Address", max_length=255)),
                ("suburb", models.CharField(db_column="Suburb", max_length=50)),
                ("postcode", models.CharField(db_column="PostCode", max_length=10)),
            ],
            options={"db_table": "AddressBookContacts", "managed": False},
        ),
        migrations.CreateModel(
            name="ApplicationClients",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="Id", max_length=36, primary_key=True, serialize=False
                    ),
                ),
                (
                    "clientkey",
                    models.CharField(
                        blank=True,
                        db_column="ClientKey",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("secret", models.CharField(db_column="Secret", max_length=255)),
                ("name", models.CharField(db_column="Name", max_length=100)),
                (
                    "applicationtype",
                    models.CharField(db_column="ApplicationType", max_length=255),
                ),
                ("active", models.BooleanField(db_column="Active")),
                (
                    "refreshtokenlifetime",
                    models.IntegerField(db_column="RefreshTokenLifetime"),
                ),
                (
                    "allowedorigin",
                    models.CharField(
                        blank=True, db_column="AllowedOrigin", max_length=512, null=True
                    ),
                ),
            ],
            options={"db_table": "ApplicationClients", "managed": False},
        ),
        migrations.CreateModel(
            name="ClientDelegations",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                )
            ],
            options={"db_table": "ClientDelegations", "managed": False},
        ),
        migrations.CreateModel(
            name="ClientRefs",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="Id", max_length=36, primary_key=True, serialize=False
                    ),
                )
            ],
            options={"db_table": "ClientRefs", "managed": False},
        ),
        migrations.CreateModel(
            name="Destinations",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="Id", max_length=36, primary_key=True, serialize=False
                    ),
                ),
                (
                    "streetaddress",
                    models.CharField(
                        blank=True, db_column="StreetAddress", max_length=512, null=True
                    ),
                ),
                ("suburb", models.CharField(db_column="Suburb", max_length=100)),
                (
                    "locationname",
                    models.CharField(
                        blank=True, db_column="LocationName", max_length=100, null=True
                    ),
                ),
                ("postcode", models.IntegerField(db_column="PostCode")),
                ("state", models.CharField(db_column="State", max_length=5)),
                (
                    "sequence",
                    models.IntegerField(blank=True, db_column="Sequence", null=True),
                ),
            ],
            options={"db_table": "Destinations", "managed": False},
        ),
        migrations.CreateModel(
            name="Localities",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="Id", max_length=36, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(db_column="Name", max_length=255)),
                ("postcode", models.IntegerField(db_column="PostCode")),
                ("isvisible", models.BooleanField(db_column="IsVisible")),
                ("isinternalonly", models.BooleanField(db_column="IsInternalOnly")),
            ],
            options={"db_table": "Localities", "managed": False},
        ),
        migrations.CreateModel(
            name="Orders",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="Id", max_length=36, primary_key=True, serialize=False
                    ),
                ),
                ("createdon", models.DateTimeField(db_column="CreatedOn")),
                (
                    "datetimerequired",
                    models.DateTimeField(db_column="DateTimeRequired"),
                ),
                ("status", models.CharField(db_column="Status", max_length=255)),
                (
                    "passengername",
                    models.CharField(db_column="PassengerName", max_length=255),
                ),
                (
                    "passengermobile",
                    models.CharField(db_column="PassengerMobile", max_length=255),
                ),
                ("passengercount", models.IntegerField(db_column="PassengerCount")),
                ("luggagecount", models.IntegerField(db_column="LuggageCount")),
                (
                    "babyseatsrequired",
                    models.IntegerField(db_column="BabySeatsRequired"),
                ),
                (
                    "babycapsulesrequired",
                    models.IntegerField(db_column="BabyCapsulesRequired"),
                ),
                (
                    "boosterseatsrequired",
                    models.IntegerField(db_column="BoosterSeatsRequired"),
                ),
                (
                    "weddingribbonrequired",
                    models.BooleanField(db_column="WeddingRibbonRequired"),
                ),
                (
                    "cartype",
                    models.CharField(
                        blank=True, db_column="CarType", max_length=255, null=True
                    ),
                ),
                (
                    "estimatedcost",
                    models.DecimalField(
                        blank=True,
                        db_column="EstimatedCost",
                        decimal_places=5,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "instructions",
                    models.CharField(
                        blank=True, db_column="Instructions", max_length=4000, null=True
                    ),
                ),
                (
                    "totalcost",
                    models.DecimalField(
                        blank=True,
                        db_column="TotalCost",
                        decimal_places=5,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "timecost",
                    models.DecimalField(
                        blank=True,
                        db_column="TimeCost",
                        decimal_places=5,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "travelcost",
                    models.DecimalField(
                        blank=True,
                        db_column="TravelCost",
                        decimal_places=5,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "extrascost",
                    models.DecimalField(
                        blank=True,
                        db_column="ExtrasCost",
                        decimal_places=5,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "carcost",
                    models.DecimalField(
                        blank=True,
                        db_column="CarCost",
                        decimal_places=5,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "specialeventcost",
                    models.DecimalField(
                        blank=True,
                        db_column="SpecialEventCost",
                        decimal_places=5,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "applicablespecialevents",
                    models.CharField(
                        blank=True,
                        db_column="ApplicableSpecialEvents",
                        max_length=4000,
                        null=True,
                    ),
                ),
                (
                    "invoicemessages",
                    models.CharField(
                        blank=True,
                        db_column="InvoiceMessages",
                        max_length=4000,
                        null=True,
                    ),
                ),
                (
                    "pickupflightdelay",
                    models.IntegerField(
                        blank=True, db_column="PickupFlightDelay", null=True
                    ),
                ),
                (
                    "airportdeparturetime",
                    models.DateTimeField(
                        blank=True, db_column="AirportDepartureTime", null=True
                    ),
                ),
                (
                    "rateschedule",
                    models.CharField(
                        blank=True, db_column="RateSchedule", max_length=30, null=True
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        blank=True,
                        db_column="Discount",
                        decimal_places=5,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "applicablediscounts",
                    models.CharField(
                        blank=True,
                        db_column="ApplicableDiscounts",
                        max_length=4000,
                        null=True,
                    ),
                ),
                (
                    "garagepassrequired",
                    models.BooleanField(db_column="GaragePassRequired"),
                ),
            ],
            options={"db_table": "Orders", "managed": False},
        ),
        migrations.CreateModel(
            name="Pickups",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="Id", max_length=36, primary_key=True, serialize=False
                    ),
                ),
                (
                    "streetaddress",
                    models.CharField(
                        blank=True, db_column="StreetAddress", max_length=512, null=True
                    ),
                ),
                ("suburb", models.CharField(db_column="Suburb", max_length=100)),
                (
                    "locationname",
                    models.CharField(
                        blank=True, db_column="LocationName", max_length=100, null=True
                    ),
                ),
                ("postcode", models.IntegerField(db_column="PostCode")),
                ("state", models.CharField(db_column="State", max_length=5)),
                (
                    "flightnumber",
                    models.CharField(
                        blank=True, db_column="FlightNumber", max_length=20, null=True
                    ),
                ),
                (
                    "sequence",
                    models.IntegerField(blank=True, db_column="Sequence", null=True),
                ),
            ],
            options={"db_table": "Pickups", "managed": False},
        ),
        migrations.CreateModel(
            name="Refreshtokens",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="Id", max_length=36, primary_key=True, serialize=False
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        blank=True,
                        db_column="Token",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("subject", models.CharField(db_column="Subject", max_length=50)),
                ("issuedutc", models.DateTimeField(db_column="IssuedUtc")),
                ("expiresutc", models.DateTimeField(db_column="ExpiresUtc")),
                (
                    "protectedticket",
                    models.CharField(db_column="ProtectedTicket", max_length=1024),
                ),
            ],
            options={"db_table": "RefreshTokens", "managed": False},
        ),
        migrations.CreateModel(
            name="Userclaims",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "claimtype",
                    models.CharField(
                        blank=True, db_column="ClaimType", max_length=255, null=True
                    ),
                ),
                (
                    "claimvalue",
                    models.CharField(
                        blank=True, db_column="ClaimValue", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "UserClaims", "managed": False},
        ),
        migrations.CreateModel(
            name="Userlogins",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "providerkey",
                    models.CharField(
                        blank=True, db_column="ProviderKey", max_length=255, null=True
                    ),
                ),
                (
                    "loginprovider",
                    models.CharField(
                        blank=True, db_column="LoginProvider", max_length=255, null=True
                    ),
                ),
            ],
            options={"db_table": "UserLogins", "managed": False},
        ),
        migrations.CreateModel(
            name="Userrolemap",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                )
            ],
            options={"db_table": "UserRoleMap", "managed": False},
        ),
        migrations.CreateModel(
            name="Userroles",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="Id",
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("roletype", models.CharField(db_column="RoleType", max_length=255)),
                (
                    "name",
                    models.CharField(db_column="Name", max_length=255, unique=True),
                ),
            ],
            options={"db_table": "UserRoles", "managed": False},
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="Id",
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("usertype", models.CharField(db_column="UserType", max_length=255)),
                (
                    "accessfailedcount",
                    models.IntegerField(
                        blank=True, db_column="AccessFailedCount", null=True
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        blank=True, db_column="Email", max_length=255, null=True
                    ),
                ),
                (
                    "emailconfirmed",
                    models.BooleanField(
                        blank=True, db_column="EmailConfirmed", null=True
                    ),
                ),
                (
                    "lockoutenabled",
                    models.BooleanField(
                        blank=True, db_column="LockoutEnabled", null=True
                    ),
                ),
                (
                    "lockoutenddateutc",
                    models.DateTimeField(
                        blank=True, db_column="LockoutEndDateUtc", null=True
                    ),
                ),
                (
                    "passwordhash",
                    models.CharField(
                        blank=True, db_column="PasswordHash", max_length=255, null=True
                    ),
                ),
                (
                    "phonenumber",
                    models.CharField(
                        blank=True, db_column="PhoneNumber", max_length=255, null=True
                    ),
                ),
                (
                    "phonenumberconfirmed",
                    models.BooleanField(
                        blank=True, db_column="PhoneNumberConfirmed", null=True
                    ),
                ),
                (
                    "twofactorenabled",
                    models.BooleanField(
                        blank=True, db_column="TwoFactorEnabled", null=True
                    ),
                ),
                (
                    "username",
                    models.CharField(db_column="UserName", max_length=255, unique=True),
                ),
                (
                    "securitystamp",
                    models.CharField(
                        blank=True, db_column="SecurityStamp", max_length=255, null=True
                    ),
                ),
                ("firstname", models.CharField(db_column="FirstName", max_length=70)),
                ("lastname", models.CharField(db_column="LastName", max_length=70)),
                (
                    "resetshorttoken",
                    models.CharField(
                        blank=True,
                        db_column="ResetShortToken",
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "emailshorttoken",
                    models.CharField(
                        blank=True,
                        db_column="EmailShortToken",
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "resettoken",
                    models.CharField(
                        blank=True, db_column="ResetToken", max_length=512, null=True
                    ),
                ),
                (
                    "emailtoken",
                    models.CharField(
                        blank=True, db_column="EmailToken", max_length=512, null=True
                    ),
                ),
            ],
            options={"db_table": "Users", "managed": False},
        ),
    ]
